{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Deployed via Cloud-Pricing-Quality-01_v2.json - Web, OD, Batch servers included.",
  "Parameters": {
    "PONumber": {
      "Description": "PO Number for billing",
      "Type": "String",
      "Default": "7000001648",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern": "[\\x20-\\x7E]*",
      "ConstraintDescription": "Must contain only ASCII characters."
    },
    "Private2c": {
      "Description": "Non-Production Confidential us-east-1c subnet",
      "Type": "String",
      "Default": "subnet-b61cbb9d"
    },
    "Private2d": {
      "Description": "Non-Production Confidential us-east-1d subnet",
      "Type": "String",
      "Default": "subnet-ea138a9d"
    },
    "Private2e": {
	  "Description" : "Private subnet for confidential apps in us-east-1e CIDR: 10.168.142.0/23",
      "Type": "String",
      "Default": "subnet-2512501f",
      "MinLength" : "1",
      "MaxLength" : "255",
      "ConstraintDescription" : "Must be a valid Private Subnet."
    },
    "VPCID": {
      "Description": "Name of and existing VPC",
      "Type": "String",
      "Default": "vpc-ff88269a"
    },
    "qaWEBSG": {
      "Description": "Cloud Pricing Quality Web Servers Security Group",
      "Type": "String",
      "Default": "sg-14d48271"
    },
    "NATaccessSG": {
      "Description": "vpc-sysco-nonprod-02-NatAccess-T1IHRRI726WJ",
      "Type": "String",
      "Default": "sg-e151a186",
      "ConstraintDescription": "Must be a valid NAT Security Group."
    },
    "CheckMKSG": {
      "Description": "CheckMK Security Group",
      "Type": "String",
      "Default": "sg-0f7fc468",
      "ConstraintDescription": "Must be a valid NAT Security Group."
    },
    "qaWEBAMI": {
      "Description": "Cloud Pricing Quality Web Servers Security Group",
      "Type": "String",
      "Default": "ami-e428948c"
    },
    "ODAMI": {
      "Description": "AMI for OD servers",
      "Type": "String",
      "Default": "ami-a43d31cc"
    },
    "AMIUpdateProc": {
      "Description": "AMI for CP-UpdateProcessor-002 ami-ecc42481",
      "Type": "String",
      "Default": "ami-ecc42481"
    },
    "AMIMCP": {
      "Description" : "20160323-RHEL-7-2-BASE - ami-6da7ab07",
      "Type" : "String",
      "Default" : "ami-6da7ab07"
    },
    "PemKey": {
      "Description": "Name of and existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "String",
      "Default": "Sysco-KP-CP-NonProd"
    },
    "PemKey2": {
      "Description": "Name of and existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "String",
      "Default": "KeyPair-Sysco-CloudPricing-NonProd"
    },
    "InstanceProfileMCP": {
      "Description" : "Instance Profile Name for MCP",
      "Type" : "String",
      "Default" : "Application-CP-MCPServerRole"
    },
    "InstanceProfileUpdateServer": {
      "Description" : "Instance Profile Name for Update Server",
      "Type" : "String",
      "Default" : "Application-CP-UpdateServerRole"
    },
    "ApplicationName": {
      "Description": "Name of application",
      "Type": "String",
      "Default": "Cloud Pricing QA-UOM",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern": "[\\x20-\\x7E]*",
      "ConstraintDescription": "Must contain only ASCII characters."
    },
    "ApplicationId": {
      "Description": "Application ID",
      "Type": "String",
      "Default": "APP-001151",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern": "[\\x20-\\x7E]*",
      "ConstraintDescription": "Must contain only ASCII characters."
    },
    "QualityDBSG": {
      "Description": "Cloud Pricing Quality DB Servers Security Group",
      "Type": "String",
      "Default": "sg-ecd48289"
    },
    "PubSNc": {
      "Description": "Public subnet for the ELB in us-east-1c CIDR: 10.168.130.0/27",
      "Type": "String",
      "Default": "subnet-2cf35206"
    },
    "PubSNd": {
      "Description": "Public subnet for the ELB in us-east-1d CIDR: 10.168.130.32/27",
      "Type": "String",
      "Default": "subnet-24fed553"
    },
    "Approver": {
      "Description": "Name of application approver",
      "Type": "String",
      "Default": "Karen Williams",
      "MinLength": "1",
      "MaxLength": "255"
    },
    "Owner": {
      "Description": "Name of application owner",
      "Type": "String",
      "Default": "James Owen Mike Rowland",
      "MinLength": "1",
      "MaxLength": "255"
    },
    "ProjectId": {
      "Description": "Project ID",
      "Type": "String",
      "Default": "BT.001176",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern": "[\\x20-\\x7E]*",
      "ConstraintDescription": "Must contain only ASCII characters."
    },
    "Environment": {
      "Description": "Environment for application",
      "Type": "String",
      "Default": "Quality",
      "AllowedValues": [
        "Sandbox",
        "Development",
        "Quality",
        "Staging",
        "Training",
        "Production"
      ],
      "ConstraintDescription": "Must be a valid environment."
    },
    "EnvironmentShort": {
      "Description": "Environment for application",
      "Type": "String",
      "Default": "QA",
      "AllowedValues": [
        "DEV",
        "QA",
        "STG",
        "PROD"
      ],
      "ConstraintDescription": "Must be a valid environment."
    }
  },
	"Resources": {
	"MS238CPWS03q": {
		"Type": "AWS::EC2::Instance",
		"Properties": {
			"AvailabilityZone": "us-east-1c",
			"DisableApiTermination": "false",
			"ImageId": "ami-483bc325",
			"InstanceType": "m3.medium",
			"KeyName": { "Ref": "PemKey" },
			"SecurityGroupIds": [
				{ "Ref": "qaWEBSG" },
				{ "Ref": "NATaccessSG" },
				{ "Ref": "CheckMKSG" }
			],
			"SubnetId": { "Ref": "Private2c" },
			"Tags": [
				{ "Key" : "Name", "Value" : "MS238CPWS03q" },
				{ "Key" : "Application_Id", "Value" : { "Ref": "ApplicationId" } },
				{ "Key" : "Application_Name", "Value" : { "Ref" : "ApplicationName" } },
				{ "Key" : "Environment", "Value":  { "Ref": "Environment" } },
				{ "Key" : "PO_Number", "Value" : { "Ref": "PONumber" } },
				{ "Key" : "Project_ID", "Value" : { "Ref": "ProjectId" } },
				{ "Key" : "Owner", "Value" : { "Ref": "Owner" } },
				{ "Key" : "Approver", "Value" : { "Ref": "Approver" } }
			],
			"UserData": { "Fn::Base64": { "Fn::Join": [ "", [
				"<powershell>\n",
				"Rename-Computer -NewName ms238cpws03q -Restart\n",
				"</powershell>"
			]]}}
		}
	},
	"MS238CPAC03q": {
		"Type": "AWS::EC2::Instance",
		"Properties": {
			"AvailabilityZone": "us-east-1c",
			"DisableApiTermination": "false",
			"ImageId": { "Ref": "qaWEBAMI" },
			"InstanceType": "m3.medium",
			"KeyName": { "Ref": "PemKey" },
			"SecurityGroupIds": [
				{ "Ref": "qaWEBSG" },
				{ "Ref": "NATaccessSG" },
				{ "Ref": "CheckMKSG" }
			],
			"SubnetId": { "Ref": "Private2c" },
			"Tags": [
				{ "Key" : "Name", "Value" : "MS238CPAC03q" },
				{ "Key" : "Application_Id", "Value" : { "Ref": "ApplicationId" } },
				{ "Key" : "Application_Name", "Value" : { "Ref" : "ApplicationName" } },
				{ "Key" : "Environment", "Value":  { "Ref": "Environment" } },
				{ "Key" : "PO_Number", "Value" : { "Ref": "PONumber" } },
				{ "Key" : "Project_ID", "Value" : { "Ref": "ProjectId" } },
				{ "Key" : "Owner", "Value" : { "Ref": "Owner" } },
				{ "Key" : "Approver", "Value" : { "Ref": "Approver" } }
			],
			"UserData": { "Fn::Base64": { "Fn::Join": [ "", [
				"<powershell>\n",
				"Rename-Computer -NewName ms238cpac03q -Restart\n",
				"</powershell>"
			]]}}
		}
	},
	"PriceWebServiceGroup" : {
		"Type" : "AWS::AutoScaling::AutoScalingGroup",
		"Properties" : {
			"AvailabilityZones" : [ "us-east-1c", "us-east-1d" ],
			"LaunchConfigurationName" : { "Ref" : "PriceWebServiceLaunchConfig" },
			"MinSize" : "1",
			"DesiredCapacity" : "1",
			"MaxSize" : "2",
			"HealthCheckType": "ELB",
			"HealthCheckGracePeriod": "300",
			"VPCZoneIdentifier" : [ { "Ref" : "Private2c" }, { "Ref" : "Private2d" } ],
			"LoadBalancerNames" : [ { "Ref" : "PriceWebServiceELB" }, { "Ref" : "privateCPELB" }, { "Ref" : "publicCPELB" } ],
			"Tags" : [
				{ "Key" : "Name", "Value" : { "Fn::Join" : ["", ["CP Web Service AutoScaling-", { "Ref" : "EnvironmentShort" }]]}, "PropagateAtLaunch" : "true" },
				{ "Key" : "Application_Name", "Value" : { "Ref" : "ApplicationName" }, "PropagateAtLaunch" : "true" },
				{ "Key" : "Application_Id", "Value" : { "Ref" : "ApplicationId" }, "PropagateAtLaunch" : "true" },
				{ "Key" : "Environment", "Value" : { "Ref" : "Environment" }, "PropagateAtLaunch" : "true" },
				{ "Key" : "PO_Number", "Value" : { "Ref" : "PONumber" }, "PropagateAtLaunch" : "true" },
				{ "Key" : "Project_ID", "Value" : { "Ref" : "ProjectId" }, "PropagateAtLaunch" : "true" },
				{ "Key" : "Owner", "Value" : { "Ref" : "Owner" }, "PropagateAtLaunch" : "true" },
				{ "Key" : "Approver", "Value" : { "Ref" : "Approver" }, "PropagateAtLaunch" : "true" }
			]
		},
		"UpdatePolicy" : {
			"AutoScalingScheduledAction" : {
				"IgnoreUnmodifiedGroupSizeProperties" : "true"
			},
			"AutoScalingRollingUpdate" : {
				"MinInstancesInService" : "1",
				"MaxBatchSize" : "1",
				"PauseTime" : "PT5M",
				"WaitOnResourceSignals" : "false"
			}
		}
	},
	"PriceWebServiceLaunchConfig" : {
		"Type" : "AWS::AutoScaling::LaunchConfiguration",
		"Properties" : {
			"ImageId" : {"Ref" : "AMIMCP"},
			"InstanceType" : "t2.medium",
			"KeyName" : { "Ref" : "PemKey2" },
			"SecurityGroups" : [{ "Ref" : "sgMCP" }, { "Ref" : "NATaccessSG" }, { "Ref" : "CheckMKSG" }],
			"IamInstanceProfile" : { "Ref" : "InstanceProfileMCP" },
			"BlockDeviceMappings" : [ {
				"DeviceName" : "/dev/sda1",
				"Ebs" : {
					"VolumeSize" : "60",
					"VolumeType" : "gp2"
				}
			} ],
			"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
				"#!/bin/bash -v\n",
				"date > /home/ec2-user/starttime\n",
				"yum update -y aws-cfn-bootstrap\n",
				"yum update -y wget\n",
				"yum update -y curl\n",
				"yum install -y sysstat\n",
				
				"# Set Timezone\n",
				"timedatectl set-timezone UTC\n",

				"# Install smbclient\n",
				"yum install -y samba-client\n",

				"##############################################\n",
				"#Change hostname to include IP Address\n",
				"##############################################\n",
				"# hostname lx238cpwebsvc01q.na.sysco.net\n",
				"# echo lx238cpwebsvc01q.na.sysco.net > /etc/hostname","\n",
				"sh -c \"hostname  cpwebsvc-$(curl http://169.254.169.254/latest/meta-data/local-ipv4/ -s)q.na.sysco.net\"\n",
				"sh -c \"echo  cpwebsvc-$(curl http://169.254.169.254/latest/meta-data/local-ipv4/ -s)q.na.sysco.net\" > /etc/hostname\n",

				"####################################\n",
				"#Add Users to server\n",
				"####################################\n",
				"useradd -m -g aix -c \"James Owen, Cloud Enablement Team\" jowe6212\n",
				"useradd -m -g aix -c \"Mike Rowland, Enterprise Architect\" mrow7849\n",
				"useradd -m -g aix -c \"Fernando Nieto, App Dev\" fnie6886\n",
				"useradd -m -g aix -c \"Ravi Goli, App Dev\" rgol4427\n",

				"#Create Linux users and groups\n",
				"useradd svccp000 -p Cpaws000\n",
				"groupadd cloudpricing\n",
				"usermod svccp000 -a -G cloudpricing\n",
				"usermod svccp000 -a -G root\n",

				"####################################\n",
				"# Download and Install java\n",
				"####################################\n",
				"cd /tmp\n",
				"wget --no-cookies --no-check-certificate --header \"Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie\" \"http://download.oracle.com/otn-pub/java/jdk/8u45-b14/jdk-8u45-linux-x64.rpm\"\n",
				"rpm -ivh jdk-8u45-linux-x64.rpm\n",

				"####################################\n",
				"# Install tomcat\n",
				"####################################\n",
				"groupadd tomcat\n",
				"useradd tomcat -b /app -g tomcat -e \"\"\n",
				"cd /tmp\n",
				"wget http://archive.apache.org/dist/tomcat/tomcat-8/v8.5.4/bin/apache-tomcat-8.5.4.tar.gz\n",
				"tar xzf apache-tomcat-8.5.4.tar.gz\n",
				"mv apache-tomcat-8.5.4 /usr/local/tomcat8\n",

				"# Set Server Environment\n",
				"#-----------------------------------\n",
				"sh -c \"echo 'export SERVER_ENVIRONMENT_VARIABLE=", { "Ref" : "EnvironmentShort" }, "'\" > /etc/profile.d/cpconsole.sh\n",
				"sh -c \"echo 'export CATALINA_OPTS=\\\"-Xms512M -Xmx2048M\\\"'\" >> /etc/profile.d/cpconsole.sh\n",

				"# Set Tomcat Environment Variable\n",
				"#-----------------------------------\n",
				"# sh -c \"echo 'SERVER_ENVIRONMENT_VARIABLE=\"", { "Ref" : "EnvironmentShort" }, "\"'\" >> /usr/local/tomcat8/conf/tomcat.conf\n",

				"# Set Tomcat Set JVM Heap\n",
				"#-----------------------------------\n",
				"# sh -c \"echo 'JAVA_OPTS=\"-Xms1g -Xmx1g -XX:MaxPermSize=256m\"'\" >> /usr/local/tomcat8/conf/tomcat.conf\n",

				"# Start Tomcat\n",
				"#-----------------------------------\n",
				"/usr/local/tomcat8/bin/startup.sh\n",

				"####################################\n",
				"# Create settings folder\n",
				"####################################\n",
				"mkdir /settings\n",
				"mkdir /settings/properties\n",
				"mkdir /settings/logs\n",
				"chown svccp000 -R /settings\n",
				"chgrp -R -c cloudpricing /settings\n",
				"chmod -R -c 777 /settings\n",

				"####################################\n",
				"# Install Splunk Universal Forwarder\n",
				"####################################\n",
				"cd /tmp\n",
				"wget -O splunkforwarder-6.4.1-debde650d26e-linux-2.6-x86_64.rpm 'https://www.splunk.com/bin/splunk/DownloadActivityServlet?architecture=x86_64&platform=linux&version=6.4.1&product=universalforwarder&filename=splunkforwarder-6.4.1-debde650d26e-linux-2.6-x86_64.rpm&wget=true'\n",
				"chmod 744 splunkforwarder-6.4.1-debde650d26e-linux-2.6-x86_64.rpm\n",
				"rpm -i splunkforwarder-6.4.1-debde650d26e-linux-2.6-x86_64.rpm\n",
				"cd /opt/splunkforwarder\n",
				"./bin/splunk start --accept-license\n",
				"./bin/splunk enable boot-start\n",

				"# Configure to run as a deployment client\n",
				"#-----------------------------------\n",
				"./bin/splunk set deploy-poll splunkdeploy.na.sysco.net:8089 -auth admin:changeme\n",

				"# Configure forwarder to send logs to Splunk Indexer\n",
				"#-----------------------------------\n",
				"./bin/splunk add forward-server splunkindex.na.sysco.net:9997 -auth admin:changeme\n",
				"./bin/splunk restart\n",

				"####################################\n",
				"# Install CodeDeploy\n",
				"####################################\n",
				"yum install ruby -y\n",
				"wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install\n",
				"chmod +x ./install\n",
				"./install auto\n",
				
				"date > /home/ec2-user/stoptime\n"
				]]}
			}
		}
	},
	"PriceWebServiceELB": {
		"Type": "AWS::ElasticLoadBalancing::LoadBalancer",
		"Properties": {
			"Subnets" : [{ "Ref" : "Private2c" },{ "Ref" : "Private2d" }],
			"LoadBalancerName" : { "Fn::Join" : ["", ["elb-cp-webservice-", { "Ref" : "EnvironmentShort" }]]},
			"Scheme": "internal",
			"CrossZone": "true",
			"SecurityGroups": [ { "Ref": "qaWEBSG" } ],
			"Listeners": [
				{
					"LoadBalancerPort": "80",
					"InstancePort": "8080",
					"Protocol": "HTTP"
				},
				{
					"LoadBalancerPort": "443",
					"InstancePort": "8080",
					"Protocol": "TCP"
				}
			],
			"HealthCheck": {
				"Target" : "HTTP:8080/",
				"HealthyThreshold": "3",
				"UnhealthyThreshold": "7",
				"Interval": "120",
				"Timeout": "15"
			},
			"Tags": [
				{ "Key" : "Name", "Value" : { "Fn::Join" : ["", ["CP-WebService-ELB-private-", { "Ref" : "EnvironmentShort" }]]}},
				{ "Key" : "Application_Name", "Value" : { "Ref" : "ApplicationName" } },
				{ "Key" : "Application_Id", "Value" : { "Ref" : "ApplicationId" } },
				{ "Key" : "Environment", "Value" : { "Ref" : "Environment" } },
				{ "Key" : "PO_Number", "Value" : { "Ref" : "PONumber" } },
				{ "Key" : "Project_ID", "Value" : { "Ref" : "ProjectId" } },
				{ "Key" : "Owner", "Value" : { "Ref" : "Owner" } },
				{ "Key" : "Approver", "Value" : { "Ref" : "Approver" } }
			]
		}
	},
	"PriceConsoleGroup" : {
		"Type" : "AWS::AutoScaling::AutoScalingGroup",
		"Properties" : {
			"AvailabilityZones" : [ "us-east-1c", "us-east-1d" ],
			"LaunchConfigurationName" : { "Ref" : "PriceConsoleLaunchConfig" },
			"MinSize" : "1",
			"DesiredCapacity" : "1",
			"MaxSize" : "2",
			"HealthCheckType": "ELB",
			"HealthCheckGracePeriod": "300",
			"VPCZoneIdentifier" : [ { "Ref" : "Private2c" }, { "Ref" : "Private2d" } ],
			"LoadBalancerNames" : [ { "Ref" : "PriceConsoleELB" } ],
			"Tags" : [
				{ "Key" : "Name", "Value" : { "Fn::Join" : ["", ["CP Console AutoScaling-", { "Ref" : "EnvironmentShort" }]]}, "PropagateAtLaunch" : "true" },
				{ "Key" : "Application_Name", "Value" : { "Ref" : "ApplicationName" }, "PropagateAtLaunch" : "true" },
				{ "Key" : "Application_Id", "Value" : { "Ref" : "ApplicationId" }, "PropagateAtLaunch" : "true" },
				{ "Key" : "Environment", "Value" : { "Ref" : "Environment" }, "PropagateAtLaunch" : "true" },
				{ "Key" : "PO_Number", "Value" : { "Ref" : "PONumber" }, "PropagateAtLaunch" : "true" },
				{ "Key" : "Project_ID", "Value" : { "Ref" : "ProjectId" }, "PropagateAtLaunch" : "true" },
				{ "Key" : "Owner", "Value" : { "Ref" : "Owner" }, "PropagateAtLaunch" : "true" },
				{ "Key" : "Approver", "Value" : { "Ref" : "Approver" }, "PropagateAtLaunch" : "true" }
			]
		},
		"UpdatePolicy" : {
			"AutoScalingScheduledAction" : {
				"IgnoreUnmodifiedGroupSizeProperties" : "true"
			},
			"AutoScalingRollingUpdate" : {
				"MinInstancesInService" : "1",
				"MaxBatchSize" : "1",
				"PauseTime" : "PT5M",
				"WaitOnResourceSignals" : "false"
			}
		}
	},
	"PriceConsoleLaunchConfig" : {
		"Type" : "AWS::AutoScaling::LaunchConfiguration",
		"Properties" : {
			"ImageId" : {"Ref" : "AMIMCP"},
			"InstanceType" : "t2.micro",
			"KeyName" : { "Ref" : "PemKey2" },
			"SecurityGroups" : [{ "Ref" : "sgMCP" }, { "Ref" : "NATaccessSG" }, { "Ref" : "CheckMKSG" }],
			"IamInstanceProfile" : { "Ref" : "InstanceProfileMCP" },
			"BlockDeviceMappings" : [ {
				"DeviceName" : "/dev/sda1",
				"Ebs" : {
					"VolumeSize" : "60",
					"VolumeType" : "gp2"
				}
			} ],
			"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
				"#!/bin/bash -v\n",
				"date > /home/ec2-user/starttime\n",
				"yum update -y aws-cfn-bootstrap\n",
				"yum update -y wget\n",
				"yum update -y curl\n",
				"yum install -y sysstat\n",
				
				"# Set Timezone\n",
				"timedatectl set-timezone UTC\n",

				"# Install smbclient\n",
				"yum install -y samba-client\n",

				"##############################################\n",
				"#Change hostname to include IP Address\n",
				"##############################################\n",
				"# hostname lx238cpconsole01q.na.sysco.net\n",
				"# echo lx238cpconsole01q.na.sysco.net > /etc/hostname","\n",
				"sh -c \"hostname  cpconsole-$(curl http://169.254.169.254/latest/meta-data/local-ipv4/ -s)q.na.sysco.net\"\n",
				"sh -c \"echo  cpconsole-$(curl http://169.254.169.254/latest/meta-data/local-ipv4/ -s)q.na.sysco.net\" > /etc/hostname\n",

				"####################################\n",
				"#Add Users to server\n",
				"####################################\n",
				"useradd -m -g aix -c \"James Owen, Cloud Enablement Team\" jowe6212\n",
				"useradd -m -g aix -c \"Mike Rowland, Enterprise Architect\" mrow7849\n",
				"useradd -m -g aix -c \"Fernando Nieto, App Dev\" fnie6886\n",
				"useradd -m -g aix -c \"Ravi Goli, App Dev\" rgol4427\n",

				"#Create Linux users and groups\n",
				"useradd svccp000 -p Cpaws000\n",
				"groupadd cloudpricing\n",
				"usermod svccp000 -a -G cloudpricing\n",
				"usermod svccp000 -a -G root\n",

				"####################################\n",
				"# Download and Install java\n",
				"####################################\n",
				"cd /tmp\n",
				"wget --no-cookies --no-check-certificate --header \"Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie\" \"http://download.oracle.com/otn-pub/java/jdk/8u45-b14/jdk-8u45-linux-x64.rpm\"\n",
				"rpm -ivh jdk-8u45-linux-x64.rpm\n",

				"####################################\n",
				"# Install tomcat\n",
				"####################################\n",
				"groupadd tomcat\n",
				"useradd tomcat -b /app -g tomcat -e \"\"\n",
				"cd /tmp\n",
				"wget http://archive.apache.org/dist/tomcat/tomcat-8/v8.5.4/bin/apache-tomcat-8.5.4.tar.gz\n",
				"tar xzf apache-tomcat-8.5.4.tar.gz\n",
				"mv apache-tomcat-8.5.4 /usr/local/tomcat8\n",

				"####################################\n",
				"# Add CORS\n",
				"####################################\n",
				"oldpattern=\"</web-app>\"\n",
				"newpattern=\"<filter> <filter-name>CorsFilter</filter-name>  <filter-class>org.apache.catalina.filters.CorsFilter</filter-class></filter><filter-mapping>  <filter-name>CorsFilter</filter-name>  <url-pattern>/*</url-pattern></filter-mapping>  </web-app>\"\n",
				"filename=\"/usr/local/tomcat8/conf/web.xml\"\n",
				"sed -i \"s@$oldpattern@$newpattern@g\" $filename\n",

				"# Set Server Environment\n",
				"#-----------------------------------\n",
				"sh -c \"echo 'export SERVER_ENVIRONMENT_VARIABLE=", { "Ref" : "EnvironmentShort" }, "'\" > /etc/profile.d/cpconsole.sh\n",

				"# Set Tomcat Environment Variable\n",
				"#-----------------------------------\n",
				"# sh -c \"echo 'SERVER_ENVIRONMENT_VARIABLE=\"", { "Ref" : "EnvironmentShort" }, "\"'\" >> /usr/local/tomcat8/conf/tomcat.conf\n",

				"# Set Tomcat Set JVM Heap\n",
				"#-----------------------------------\n",
				"# sh -c \"echo 'JAVA_OPTS=\"-Xms1g -Xmx1g -XX:MaxPermSize=256m\"'\" >> /usr/local/tomcat8/conf/tomcat.conf\n",

				"# Start Tomcat\n",
				"#-----------------------------------\n",
				"/usr/local/tomcat8/bin/startup.sh\n",
				
				"####################################\n",
				"# Create settings folder\n",
				"####################################\n",
				"mkdir /settings\n",
				"mkdir /settings/properties\n",
				"mkdir /settings/logs\n",
				"chown svccp000 -R /settings\n",
				"chgrp -R -c cloudpricing /settings\n",
				"chmod -R -c 777 /settings\n",

				"####################################\n",
				"# Install Splunk Universal Forwarder\n",
				"####################################\n",
				"cd /tmp\n",
				"wget -O splunkforwarder-6.4.1-debde650d26e-linux-2.6-x86_64.rpm 'https://www.splunk.com/bin/splunk/DownloadActivityServlet?architecture=x86_64&platform=linux&version=6.4.1&product=universalforwarder&filename=splunkforwarder-6.4.1-debde650d26e-linux-2.6-x86_64.rpm&wget=true'\n",
				"chmod 744 splunkforwarder-6.4.1-debde650d26e-linux-2.6-x86_64.rpm\n",
				"rpm -i splunkforwarder-6.4.1-debde650d26e-linux-2.6-x86_64.rpm\n",
				"cd /opt/splunkforwarder\n",
				"./bin/splunk start --accept-license\n",
				"./bin/splunk enable boot-start\n",

				"# Configure to run as a deployment client\n",
				"#-----------------------------------\n",
				"./bin/splunk set deploy-poll splunkdeploy.na.sysco.net:8089 -auth admin:changeme\n",

				"# Configure forwarder to send logs to Splunk Indexer\n",
				"#-----------------------------------\n",
				"./bin/splunk add forward-server splunkindex.na.sysco.net:9997 -auth admin:changeme\n",
				"./bin/splunk restart\n",

				"####################################\n",
				"# Install CodeDeploy\n",
				"####################################\n",
				"yum install ruby -y\n",
				"wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install\n",
				"chmod +x ./install\n",
				"./install auto\n",
				
				"date > /home/ec2-user/stoptime\n"
				]]}
			}
		}
	},
	"PriceConsoleELB": {
		"Type": "AWS::ElasticLoadBalancing::LoadBalancer",
		"Properties": {
			"Subnets" : [{ "Ref" : "Private2c" },{ "Ref" : "Private2d" }],
			"LoadBalancerName" : { "Fn::Join" : ["", ["elb-cp-console-", { "Ref" : "EnvironmentShort" }]]},
			"Scheme": "internal",
			"CrossZone": "true",
			"SecurityGroups": [ { "Ref": "qaWEBSG" } ],
			"Listeners": [
				{
					"LoadBalancerPort": "80",
					"InstancePort": "8080",
					"Protocol": "HTTP"
				},
				{
					"LoadBalancerPort": "443",
					"InstancePort": "8080",
					"Protocol": "TCP"
				}
			],
			"HealthCheck": {
				"Target" : "HTTP:8080/",
				"HealthyThreshold": "3",
				"UnhealthyThreshold": "2",
				"Interval": "120",
				"Timeout": "5"
			},
			"Tags": [
				{ "Key" : "Name", "Value" : { "Fn::Join" : ["", ["CP-Console-ELB-private-", { "Ref" : "EnvironmentShort" }]]}},
				{ "Key" : "Application_Name", "Value" : { "Ref" : "ApplicationName" } },
				{ "Key" : "Application_Id", "Value" : { "Ref" : "ApplicationId" } },
				{ "Key" : "Environment", "Value" : { "Ref" : "Environment" } },
				{ "Key" : "PO_Number", "Value" : { "Ref" : "PONumber" } },
				{ "Key" : "Project_ID", "Value" : { "Ref" : "ProjectId" } },
				{ "Key" : "Owner", "Value" : { "Ref" : "Owner" } },
				{ "Key" : "Approver", "Value" : { "Ref" : "Approver" } }
			]
		}
	},
	"MS238CPSQL03q": {
		"Type": "AWS::EC2::Instance",
		"Properties": {
			"AvailabilityZone": "us-east-1c",
			"DisableApiTermination": "false",
			"ImageId": { "Ref": "ODAMI" },
			"InstanceType": "m3.large",
			"KeyName": { "Ref": "PemKey" },
			"SecurityGroupIds": [
				{ "Ref": "QualityDBSG" },
				{ "Ref": "NATaccessSG" },
				{ "Ref": "CheckMKSG" }
			],
			"SubnetId": { "Ref": "Private2c" },
			"Tags": [
				{ "Key" : "Name", "Value" : "MS238CPSQL03q" },
				{ "Key" : "Application_Id", "Value" : { "Ref": "ApplicationId" } },
				{ "Key" : "Application_Name", "Value" : { "Ref" : "ApplicationName" } },
				{ "Key" : "Environment", "Value":  { "Ref": "Environment" } },
				{ "Key" : "PO_Number", "Value" : { "Ref": "PONumber" } },
				{ "Key" : "Project_ID", "Value" : { "Ref": "ProjectId" } },
				{ "Key" : "Owner", "Value" : { "Ref": "Owner" } },
				{ "Key" : "Approver", "Value" : { "Ref": "Approver" } }
			],
			"UserData": { "Fn::Base64": { "Fn::Join": [ "", [
				"<powershell>\n",
				"Rename-Computer -NewName ms238cpsql03q -Restart\n",
				"</powershell>"
			]]}}
		}
	},
	"MS238CPBTSQL03q": {
		"Type": "AWS::EC2::Instance",
		"Properties": {
			"AvailabilityZone": "us-east-1c",
			"DisableApiTermination": "false",
			"ImageId": { "Ref": "ODAMI" },
			"InstanceType": "m3.large",
			"KeyName": { "Ref": "PemKey" },
			"SecurityGroupIds": [
				{ "Ref": "QualityDBSG" },
				{ "Ref": "NATaccessSG" },
				{ "Ref": "CheckMKSG" }
			],
			"SubnetId": { "Ref": "Private2c" },
			"Tags": [
				{ "Key" : "Name", "Value" : "MS238CPBTSQL03q" },
				{ "Key" : "Application_Id", "Value" : { "Ref": "ApplicationId" } },
				{ "Key" : "Application_Name", "Value" : { "Ref" : "ApplicationName" } },
				{ "Key" : "Environment", "Value":  { "Ref": "Environment" } },
				{ "Key" : "PO_Number", "Value" : { "Ref": "PONumber" } },
				{ "Key" : "Project_ID", "Value" : { "Ref": "ProjectId" } },
				{ "Key" : "Owner", "Value" : { "Ref": "Owner" } },
				{ "Key" : "Approver", "Value" : { "Ref": "Approver" } }
			],
			"UserData": { "Fn::Base64": { "Fn::Join": [ "", [
				"<powershell>\n",
				"Rename-Computer -NewName ms238cpbtsql03q -Restart\n",
				"</powershell>"
			]]}}
		}
	},
	"MS238CPODSQL03q": {
		"Type": "AWS::EC2::Instance",
		"Properties": {
			"AvailabilityZone": "us-east-1c",
			"DisableApiTermination": "false",
			"ImageId": { "Ref": "ODAMI" },
			"InstanceType": "m3.large",
			"KeyName": { "Ref": "PemKey" },
			"SecurityGroupIds": [
				{ "Ref": "QualityDBSG" },
				{ "Ref": "NATaccessSG" },
				{ "Ref": "CheckMKSG" }
			],
			"SubnetId": { "Ref": "Private2c" },
			"Tags": [
				{ "Key" : "Name", "Value" : "MS238CPODSQL03q" },
				{ "Key" : "Application_Id", "Value" : { "Ref": "ApplicationId" } },
				{ "Key" : "Application_Name", "Value" : { "Ref" : "ApplicationName" } },
				{ "Key" : "Environment", "Value":  { "Ref": "Environment" } },
				{ "Key" : "PO_Number", "Value" : { "Ref": "PONumber" } },
				{ "Key" : "Project_ID", "Value" : { "Ref": "ProjectId" } },
				{ "Key" : "Owner", "Value" : { "Ref": "Owner" } },
				{ "Key" : "Approver", "Value" : { "Ref": "Approver" } }
			],
			"UserData": { "Fn::Base64": { "Fn::Join": [ "", [
					"<powershell>\n",
					"Rename-Computer -NewName ms238cpodsql03q -Restart\n",
					"</powershell>"
			]]}}
		}
	},
	"lx238cpmcp01q" : {
		"Type" : "AWS::EC2::Instance",
		"Properties" : {
			"AvailabilityZone" : "us-east-1d",
			"ImageId" : {"Ref" : "AMIMCP"},
			"InstanceType" : "t2.medium",
			"KeyName" : { "Ref" : "PemKey2" },
			"SecurityGroupIds" : [{ "Ref" : "sgMCP" }, { "Ref" : "NATaccessSG" }, { "Ref" : "CheckMKSG" }],
			"IamInstanceProfile" : { "Ref" : "InstanceProfileMCP" },
			"SubnetId": { "Ref": "Private2d" },
			"BlockDeviceMappings" : [ {
				"DeviceName" : "/dev/sda1",
				"Ebs" : {
					"VolumeSize" : "60",
					"VolumeType" : "gp2"
				}
			} ],
			"Tags" : [
				{ "Key" : "Name", "Value" : "lx238cpmcp01q" },
				{ "Key" : "Application_Name", "Value" : { "Ref" : "ApplicationName" } },
				{ "Key" : "Application_Id", "Value" : { "Ref" : "ApplicationId" } },
				{ "Key" : "Owner", "Value" : { "Ref" : "Owner" } },
				{ "Key" : "Approver", "Value" : { "Ref" : "Approver" } },
				{ "Key" : "PO_Number", "Value" : { "Ref" : "PONumber" } },
				{ "Key" : "Environment", "Value" : { "Ref" : "Environment" } },
				{ "Key" : "Project_ID", "Value" : { "Ref" : "ProjectId" } }
			],
			"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
				"#!/bin/bash -v\n",
				"date > /home/ec2-user/starttime\n",
				"yum update -y aws-cfn-bootstrap\n",
				"yum update -y wget\n",
				"yum update -y curl\n",
				"yum install -y sysstat\n",
				
				"# Set Timezone\n",
				"timedatectl set-timezone UTC\n",

				"#Change Name of server to match new hostname\n",
				"hostname lx238cpmcp01q.na.sysco.net\n",
				"echo lx238cpmcp01q.na.sysco.net > /etc/hostname","\n",
				"# sh -c \"hostname  cpmcp-$(curl http://169.254.169.254/latest/meta-data/local-ipv4/ -s)q.na.sysco.net\"\n",
				"#sh -c \"echo  cpmcp-$(curl http://169.254.169.254/latest/meta-data/local-ipv4/ -s)q.na.sysco.net\" > /etc/hostname\n",

				"####################################\n",
				"#Add Users to server\n",
				"####################################\n",
				"useradd -m -g aix -c \"James Owen, Cloud Enablement Team\" jowe6212\n",
				"useradd -m -g aix -c \"Mike Rowland, Enterprise Architect\" mrow7849\n",
				"useradd -m -g aix -c \"Fernando Nieto, App Dev\" fnie6886\n",
				"useradd -m -g aix -c \"Ravi Goli, App Dev\" rgol4427\n",

				"####################################\n",
				"# Download and Install java\n",
				"####################################\n",
				"cd /tmp\n",
				"wget --no-cookies --no-check-certificate --header \"Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie\" \"http://download.oracle.com/otn-pub/java/jdk/8u45-b14/jdk-8u45-linux-x64.rpm\"\n",
				"rpm -ivh jdk-8u45-linux-x64.rpm\n",

				"####################################\n",
				"# Install tomcat\n",
				"####################################\n",
				"groupadd tomcat\n",
				"useradd tomcat -b /app -g tomcat -e \"\"\n",
				"cd /tmp\n",
				"wget http://archive.apache.org/dist/tomcat/tomcat-7/v7.0.68/bin/apache-tomcat-7.0.68.tar.gz\n",
				"tar xzf apache-tomcat-7.0.68.tar.gz\n",
				"mv apache-tomcat-7.0.68 /usr/local/tomcat7\n",

				"# Install smbclient\n",
				"yum install -y samba-client\n",

				"# Set Server Environment\n",
				"sh -c \"echo 'export SERVER_ENVIRONMENT_VARIABLE=", { "Ref" : "EnvironmentShort" }, "'\" > /etc/profile.d/cpmcp.sh\n",
				"# sh -c \"echo 'export SERVER_ENVIRONMENT=QA' >> /etc/profile.d/cpmcp.sh\"\n",
				
				"# Set Tomcat Environment Variable\n",
				"# sh -c \"echo 'SERVER_ENVIRONMENT_VARIABLE=\"", { "Ref" : "EnvironmentShort" }, "\"'\" >> /usr/local/tomcat7/conf/tomcat.conf\n",

				"# Set Tomcat Set JVM Heap\n",
				"# sh -c \"echo 'JAVA_OPTS=\"-Xms1g -Xmx1g -XX:MaxPermSize=256m\"'\" >> /usr/local/tomcat7/conf/tomcat.conf\n",

				"# Start Tomcat\n",
				"# /usr/local/tomcat7/bin/startup.sh\n",

				"# Create settings folder\n",
				"mkdir /settings\n",
				"mkdir /settings/properties\n",
				"mkdir /settings/logs\n",
				"chown tomcat -R /settings\n",
				"chgrp -R -c ec2-user /settings\n",
				"chmod -R -c 777 /settings\n",

				"# Install Splunk Universal Forwarder\n",
				"cd /tmp\n",
				"wget -O splunkforwarder-6.4.1-debde650d26e-linux-2.6-x86_64.rpm 'https://www.splunk.com/bin/splunk/DownloadActivityServlet?architecture=x86_64&platform=linux&version=6.4.1&product=universalforwarder&filename=splunkforwarder-6.4.1-debde650d26e-linux-2.6-x86_64.rpm&wget=true'\n",
				"chmod 744 splunkforwarder-6.4.1-debde650d26e-linux-2.6-x86_64.rpm\n",
				"rpm -i splunkforwarder-6.4.1-debde650d26e-linux-2.6-x86_64.rpm\n",
				"cd /opt/splunkforwarder\n",
				"./bin/splunk start --accept-license\n",
				"./bin/splunk enable boot-start\n",
				"./bin/splunk restart\n",

				"# Configure to run as a deployment client\n",
				"./bin/splunk set deploy-poll internal-SyscoSplunkDployProdELB-prod-1536191272.us-east-1.elb.amazonaws.com:8089 -auth admin:changeme\n",

				"# Configure forwarder to send logs to Splunk Indexer\n",
				"./bin/splunk add forward-server internal-SyscoSplunkIndxProdELB-prod-124146806.us-east-1.elb.amazonaws.com:9997 -auth admin:changeme\n",
				"./bin/splunk restart\n",

				"# Install CodeDeploy\n",
				"yum install ruby -y\n",
				"wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install\n",
				"chmod +x ./install\n",
				"./install auto\n",
				
				"date > /home/ec2-user/stoptime\n"
				]]}
			}
		}
	},
	"JobProcessorGroup" : {
		"Type" : "AWS::AutoScaling::AutoScalingGroup",
		"Properties" : {
			"AvailabilityZones" : ["us-east-1c"],
			"LaunchConfigurationName" : { "Ref" : "JobProcessorLaunchConfig" },
			"MinSize" : "1",
			"MaxSize" : "2",
			"DesiredCapacity" : "1",
			"HealthCheckType": "EC2",
			"HealthCheckGracePeriod": "300",
			"VPCZoneIdentifier" : [ { "Ref" : "Private2c" } ],
			"Tags" : [
				{ "Key" : "Name", "Value" : "lx238cpjp01q", "PropagateAtLaunch" : "true" },
				{ "Key" : "Application_Name", "Value" : { "Ref" : "ApplicationName" }, "PropagateAtLaunch" : "true" },
				{ "Key" : "Application_Id", "Value" : { "Ref" : "ApplicationId" }, "PropagateAtLaunch" : "true" },
				{ "Key" : "Environment", "Value" : { "Ref" : "Environment" }, "PropagateAtLaunch" : "true" },
				{ "Key" : "PO_Number", "Value" : { "Ref" : "PONumber" }, "PropagateAtLaunch" : "true" },
				{ "Key" : "Project_ID", "Value" : { "Ref" : "ProjectId" }, "PropagateAtLaunch" : "true" },
				{ "Key" : "Owner", "Value" : { "Ref" : "Owner" }, "PropagateAtLaunch" : "true" },
				{ "Key" : "Approver", "Value" : { "Ref" : "Approver" }, "PropagateAtLaunch" : "true" }
			]
		},
		"UpdatePolicy" : {
			"AutoScalingScheduledAction" : {
				"IgnoreUnmodifiedGroupSizeProperties" : "true"
			},
			"AutoScalingRollingUpdate" : {
				"MinInstancesInService" : "1",
				"MaxBatchSize" : "1",
				"PauseTime" : "PT5M",
				"WaitOnResourceSignals" : "false"
			}
		}
	},
	"JobProcessorLaunchConfig" : {
		"Type" : "AWS::AutoScaling::LaunchConfiguration",
		"Properties" : {
			"ImageId" : {"Ref" : "AMIMCP"},
			"InstanceType" : "t2.medium",
			"KeyName" : { "Ref" : "PemKey2" },
			"SecurityGroups" : [{ "Ref" : "sgMCP" }, { "Ref" : "NATaccessSG" }, { "Ref" : "CheckMKSG" }],
			"IamInstanceProfile" : { "Ref" : "InstanceProfileMCP" },
			"BlockDeviceMappings" : [ {
				"DeviceName" : "/dev/sda1",
				"Ebs" : {
					"VolumeSize" : "60",
					"VolumeType" : "gp2"
				}
			} ],
			"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
				"#!/bin/bash -v\n",
				"date > /home/ec2-user/starttime\n",
				"yum update -y aws-cfn-bootstrap\n",
				"yum update -y wget\n",
				"yum update -y curl\n",
				"yum install -y sysstat\n",
				
				"# Set Timezone\n",
				"timedatectl set-timezone UTC\n",

				"#Change Name of server to match new hostname\n",
				"hostname lx238cpjp01q.na.sysco.net\n",
				"echo lx238cpjp01q.na.sysco.net > /etc/hostname","\n",
				"# sh -c \"hostname  cpjp-$(curl http://169.254.169.254/latest/meta-data/local-ipv4/ -s)q.na.sysco.net\"\n",
				"#sh -c \"echo  cpjp-$(curl http://169.254.169.254/latest/meta-data/local-ipv4/ -s)q.na.sysco.net\" > /etc/hostname\n",

				"####################################\n",
				"#Add Users to server\n",
				"####################################\n",
				"useradd -m -g aix -c \"James Owen, Cloud Enablement Team\" jowe6212\n",
				"useradd -m -g aix -c \"Mike Rowland, Enterprise Architect\" mrow7849\n",
				"useradd -m -g aix -c \"Fernando Nieto, App Dev\" fnie6886\n",
				"useradd -m -g aix -c \"Ravi Goli, App Dev\" rgol4427\n",

				"#Create Linux users and groups\n",
				"useradd svccp000 -p Cpaws000\n",
				"groupadd cloudpricing\n",
				"usermod svccp000 -a -G cloudpricing\n",
				"usermod svccp000 -a -G root\n",

				"####################################\n",
				"# Download and Install java\n",
				"####################################\n",
				"cd /tmp\n",
				"wget --no-cookies --no-check-certificate --header \"Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie\" \"http://download.oracle.com/otn-pub/java/jdk/8u45-b14/jdk-8u45-linux-x64.rpm\"\n",
				"rpm -ivh jdk-8u45-linux-x64.rpm\n",

				"# Install smbclient\n",
				"yum install -y samba-client\n",

				"# Set Server Environment\n",
				"sh -c \"echo 'export SERVER_ENVIRONMENT_VARIABLE=", { "Ref" : "EnvironmentShort" }, "'\" > /etc/profile.d/cpmcp.sh\n",
				"# sh -c \"echo 'export SERVER_ENVIRONMENT=QA' >> /etc/profile.d/cpmcp.sh\"\n",
				
				"# Create settings folder\n",
				"mkdir /settings\n",
				"mkdir /settings/properties\n",
				"mkdir /settings/logs\n",
				"mkdir /opt/cloudpricing\n",
				"chown svccp000 -R /settings\n",
				"chown svccp000 -R /opt/cloudpricing\n",
				"chgrp -R -c cloudpricing /settings\n",
				"chgrp -R -c cloudpricing /opt/cloudpricing\n",
				"chmod -R -c 777 /settings\n",
				"chmod -R -c 777 /opt/cloudpricing\n",

				"####################################\n",
				"# Install Splunk Universal Forwarder\n",
				"####################################\n",
				"cd /tmp\n",
				"wget -O splunkforwarder-6.4.1-debde650d26e-linux-2.6-x86_64.rpm 'https://www.splunk.com/bin/splunk/DownloadActivityServlet?architecture=x86_64&platform=linux&version=6.4.1&product=universalforwarder&filename=splunkforwarder-6.4.1-debde650d26e-linux-2.6-x86_64.rpm&wget=true'\n",
				"chmod 744 splunkforwarder-6.4.1-debde650d26e-linux-2.6-x86_64.rpm\n",
				"rpm -i splunkforwarder-6.4.1-debde650d26e-linux-2.6-x86_64.rpm\n",
				"cd /opt/splunkforwarder\n",
				"./bin/splunk start --accept-license\n",
				"./bin/splunk enable boot-start\n",

				"# Configure to run as a deployment client\n",
				"./bin/splunk set deploy-poll splunkdeploy.na.sysco.net:8089 -auth admin:changeme\n",

				"# Configure forwarder to send logs to Splunk Indexer\n",
				"./bin/splunk add forward-server splunkindex.na.sysco.net:9997 -auth admin:changeme\n",
				"./bin/splunk restart\n",

				"####################################\n",
				"# Install CodeDeploy\n",
				"####################################\n",
				"yum install ruby -y\n",
				"wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install\n",
				"chmod +x ./install\n",
				"./install auto\n",
				
				"date > /home/ec2-user/stoptime\n"
				]]}
			}
		}
	},
	"MS238CPUPSQL02q": {
		"Type": "AWS::EC2::Instance",
		"Metadata" : {
			"AWS::CloudFormation::Init" : { "config" : {
				"files" : {
					"c:\\cfn\\cfn-hup.conf" : { "content" : { "Fn::Join" : ["", [
						"[main]\n",
						"stack=", { "Ref" : "AWS::StackId" }, "\n",
						"region=", { "Ref" : "AWS::Region" }, "\n"
					]]}},
					"c:\\cfn\\hooks.d\\cfn-auto-reloader.conf" : { "content": { "Fn::Join" : ["", [
						"[cfn-auto-reloader-hook]\n",
						"triggers=post.update\n",
						"path=Resources.MS238CPUPSQL02q.Metadata.AWS::CloudFormation::Init\n",
						"action=cfn-init.exe -v -s ", { "Ref" : "AWS::StackId" }, " -r MS238CPUPSQL02q --region ", { "Ref" : "AWS::Region" }, "\n"
					]]}},
					"C:\\temp\\apache-tomcat-7.0.70-windows-x64.zip" :
						{ "source" : "http://archive.apache.org/dist/tomcat/tomcat-7/v7.0.70/bin/apache-tomcat-7.0.70-windows-x64.zip" },
					"c:\\temp\\StartupTask.bat" : { "content": { "Fn::Join" : ["", [
						"cd \\temp\n",
						"ECHO [default] > \"C:\\temp\\inputs.conf\"\n",
						"ECHO host = $decideOnStartup >> \"C:\\temp\\inputs.conf\"\n",
						"ECHO [script://$SPLUNK_HOME\\bin\\scripts\\splunk-wmi.path] >> \"C:\\temp\\inputs.conf\"\n",
						"ECHO disabled = 0 >> \"C:\\temp\\inputs.conf\"\n",
						
						"ECHO [tcpout] > \"C:\\temp\\outputs.conf\"\n",
						"ECHO defaultGroup = default-autolb-group >> \"C:\\temp\\outputs.conf\"\n",
						"ECHO [tcpout:default-autolb-group] >> \"C:\\temp\\outputs.conf\"\n",
						"ECHO server = splunkindex.na.sysco.net:9997 >> \"C:\\temp\\outputs.conf\"\n",
						"ECHO [tcpout-server://splunkindex.na.sysco.net:9997] >> \"C:\\temp\\outputs.conf\"\n",

						"ECHO [target-broker:deploymentServer] > \"C:\\Program Files\\SplunkUniversalForwarder\\etc\\system\\local\\deploymentclient.conf\"\n",
						"ECHO targetUri = splunkdeploy.na.sysco.net:8089 >> \"C:\\Program Files\\SplunkUniversalForwarder\\etc\\system\\local\\deploymentclient.conf\"\n",
						"ECHO [deployment-client] >> \"C:\\Program Files\\SplunkUniversalForwarder\\etc\\system\\local\\deploymentclient.conf\"\n",
						"ECHO clientName = cpup $HOSTNAME >> \"C:\\Program Files\\SplunkUniversalForwarder\\etc\\system\\local\\deploymentclient.conf\"\n",

						"powershell.exe -nologo -noprofile -command \"& { Add-Type -A 'System.IO.Compression.FileSystem'; [IO.Compression.ZipFile]::ExtractToDirectory('apache-tomcat-7.0.70-windows-x64.zip', 'C:\\Program Files\\Tomcat\\'); }\"\n",

						"aws s3 cp s3://sysco-nonprod-codedeploy-us-east-1/CloudPricing_UpdateService/", { "Ref" : "EnvironmentShort" }, "/properties/CreateTask.xml C:\\temp\\CreateTask.xml\n",
						"%windir%/System32/schtasks /Create /F /tn \"Cloud Pricing - Startup Task\" /xml C:\\temp\\CreateTask.xml\n"
					]]}}
				},
				"commands" : {
					"1-StartupTask" : { "command" : "C:\\temp\\StartupTask.bat" }
				},
				"services" : { "windows" : { "cfn-hup" : {
					"enabled" : "true",
					"ensureRunning" : "true",
					"files" : ["c:\\cfn\\cfn-hup.conf", "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"]
				}}}
			}}
		},
		"Properties": {
			"AvailabilityZone": "us-east-1c",
			"DisableApiTermination": "false",
			"ImageId": "ami-16119f01",
			"InstanceType": "c4.large",
			"IamInstanceProfile" : { "Ref" : "InstanceProfileUpdateServer" },
			"KeyName": { "Ref": "PemKey2" },
			"SecurityGroupIds": [ { "Ref": "QualityDBSG" }, { "Ref" : "NATaccessSG" }, { "Ref" : "CheckMKSG" } ],
			"SubnetId": { "Ref": "Private2c" },
			"Tags": [
				{ "Key": "Name", "Value": "MS238CPUPSQL02q" },
				{ "Key": "Application_Name", "Value": { "Ref": "ApplicationName" } },
				{ "Key": "Application_Id", "Value": { "Ref": "ApplicationId" } },
				{ "Key": "Environment", "Value": { "Ref": "Environment" } },
				{ "Key": "PO_Number", "Value": { "Ref": "PONumber" } },
				{ "Key": "Project_ID", "Value": { "Ref": "ProjectId" } },
				{ "Key": "Owner", "Value": { "Ref": "Owner" } },
				{ "Key": "Approver", "Value": { "Ref": "Approver" } }
			],
			"UserData" : { "Fn::Base64" : { "Fn::Join" : [ "", [
				"<script>\n",
				"cfn-init.exe -v -s ", { "Ref" : "AWS::StackId" }, " -r MS238CPUPSQL02q --region ", { "Ref" : "AWS::Region" }, "\n",
				"</script>"
			]]}}
		}
	},
	"sgMCP" : {
		"Type" : "AWS::EC2::SecurityGroup",
		"Properties" : {
			"GroupDescription" : "CP MCP App SG",
			"VpcId" : { "Ref" : "VPCID" },
			"SecurityGroupIngress" : [ 
			{
				"IpProtocol" : "tcp",
				"FromPort" : "80",
				"ToPort" : "80",
				"CidrIp" : "10.0.0.0/8"
			},
			{
				"IpProtocol" : "tcp",
				"FromPort" : "80",
				"ToPort" : "8080",
				"CidrIp" : "10.0.0.0/8"
			},
			{
				"IpProtocol" : "tcp",
				"FromPort" : "22",
				"ToPort" : "22",
				"CidrIp" : "10.0.0.0/8"
			},
			{
				"IpProtocol" : "icmp",
				"FromPort" : "-1",
				"ToPort" : "-1",
				"CidrIp" : "10.0.0.0/8"
			}],
			"Tags" : [
				{ "Key" : "Name", "Value" : "sg/vpc_sysco_qa_01/cpmcp_qa_app" },
				{ "Key" : "Application_Name", "Value" : { "Ref" : "ApplicationName" } },
				{ "Key" : "Application_Id", "Value" : { "Ref" : "ApplicationId" } },
				{ "Key" : "Owner", "Value" : { "Ref" : "Owner" } },
				{ "Key" : "Approver", "Value" : { "Ref" : "Approver" } },
				{ "Key" : "Cost_Center", "Value" : { "Ref" : "PONumber" } },
				{ "Key" : "PO_Number", "Value" : { "Ref" : "PONumber" } },
				{ "Key" : "Environment", "Value" : { "Ref" : "Environment" } },
				{ "Key" : "Project_ID", "Value" : { "Ref" : "ProjectId" } }
			]
		}
	},
	"publicELBsg": {
		"Type": "AWS::EC2::SecurityGroup",
		"Properties": {
			"GroupDescription": "Cloud Pricing QA Public ELB SG",
			"VpcId": { "Ref": "VPCID" },
			"SecurityGroupIngress": [
			{
				"IpProtocol": "tcp",
				"FromPort": "443",
				"ToPort": "443",
				"CidrIp": "198.101.135.151/32"
			},
			{
				"IpProtocol": "tcp",
				"FromPort": "443",
				"ToPort": "443",
				"CidrIp": "52.3.78.140/32"
			},
			{
				"IpProtocol": "tcp",
				"FromPort": "443",
				"ToPort": "443",
				"CidrIp": "52.7.23.106/32"
			},
			{
				"IpProtocol": "tcp",
				"FromPort": "443",
				"ToPort": "443",
				"CidrIp": "66.60.245.48/32"
			},
			{
				"IpProtocol": "tcp",
				"FromPort": "443",
				"ToPort": "443",
				"CidrIp": "96.228.152.146/32"
			}],
			"Tags": [
				{ "Key" : "Name", "Value": "sg/vpc_sysco_nonprod_02/cloudpricing_qa_public_elb" },
				{ "Key" : "Application_Id", "Value" : { "Ref": "ApplicationId" } },
				{ "Key" : "Application_Name", "Value" : { "Ref" : "ApplicationName" } },
				{ "Key" : "Environment", "Value":  { "Ref": "Environment" } },
				{ "Key" : "PO_Number", "Value" : { "Ref": "PONumber" } },
				{ "Key" : "Project_ID", "Value" : { "Ref": "ProjectId" } },
				{ "Key" : "Owner", "Value" : { "Ref": "Owner" } },
				{ "Key" : "Approver", "Value" : { "Ref": "Approver" } }
			]
		}
	},
	"privateCPELB": {
		"Type": "AWS::ElasticLoadBalancing::LoadBalancer",
		"Properties": {
			"Subnets" : [{ "Ref" : "Private2c" },{ "Ref" : "Private2d" }],
			"LoadBalancerName": "internal-elb-ws01-cp-qa",
			"Scheme": "internal",
			"CrossZone": "true",
			"SecurityGroups": [ { "Ref": "qaWEBSG" } ],
			"Listeners": [
			{
				"LoadBalancerPort": "80",
				"InstancePort": "8080",
				"Protocol": "HTTP"
			},
			{
				"LoadBalancerPort": "443",
				"InstancePort": "8080",
				"Protocol": "TCP"
			}
			],
			"HealthCheck": {
				"Target": "TCP:22",
				"HealthyThreshold": "10",
				"UnhealthyThreshold": "2",
				"Interval": "30",
				"Timeout": "5"
			},
			"Tags": [
				{ "Key" : "Name", "Value": "elb_priv_ws01/vpc_sysco_nonprod_02/cp_qa" },
				{ "Key" : "Application_Id", "Value" : { "Ref": "ApplicationId" } },
				{ "Key" : "Application_Name", "Value" : { "Ref" : "ApplicationName" } },
				{ "Key" : "Environment", "Value":  { "Ref": "Environment" } },
				{ "Key" : "PO_Number", "Value" : { "Ref": "PONumber" } },
				{ "Key" : "Project_ID", "Value" : { "Ref": "ProjectId" } },
				{ "Key" : "Owner", "Value" : { "Ref": "Owner" } },
				{ "Key" : "Approver", "Value" : { "Ref": "Approver" } }
			]
		}
	},
	"publicCPELB": {
		"Type": "AWS::ElasticLoadBalancing::LoadBalancer",
		"Properties": {
		"Subnets" : [{ "Ref" : "PubSNc" },{ "Ref" : "PubSNd" }],
		"LoadBalancerName": "elb-public-ws01-cp-qa",
		"CrossZone": "true",
		"SecurityGroups": [ { "Ref": "publicELBsg" } ],
		"Listeners": [
			{
				"LoadBalancerPort": "443",
				"InstancePort": "8080",
				"Protocol": "HTTPS",
				"SSLCertificateId": "arn:aws:iam::885523507357:server-certificate/cloudpricing-qa.cloud.sysco.com"
			}
		],
		"HealthCheck": {
			"Target": "TCP:22",
			"HealthyThreshold": "10",
			"UnhealthyThreshold": "2",
			"Interval": "30",
			"Timeout": "5"
		},
		"Tags": [
			{ "Key" : "Name", "Value": "elb_priv_ws01/vpc_sysco_nonprod_02/cp_qa" },
			{ "Key" : "Application_Id", "Value" : { "Ref": "ApplicationId" } },
			{ "Key" : "Application_Name", "Value" : { "Ref" : "ApplicationName" } },
			{ "Key" : "Environment", "Value":  { "Ref": "Environment" } },
			{ "Key" : "PO_Number", "Value" : { "Ref": "PONumber" } },
			{ "Key" : "Project_ID", "Value" : { "Ref": "ProjectId" } },
			{ "Key" : "Owner", "Value" : { "Ref": "Owner" } },
			{ "Key" : "Approver", "Value" : { "Ref": "Approver" } }
		]
      }
    }
  }
}
