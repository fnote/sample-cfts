AWSTemplateFormatVersion: 2010-09-09
Description: "Infrastructure of CIPZ Seed MockAPI"
Parameters:
  environment:
    Description: Name of the environment
    Type: String
    Default: DEV
    AllowedValues:
      - DEV
      - EXE
      - STG
  namingPrefix:
    Description: Naming prefix for the components created using this script
    Type: String
    Default: cp-cipz-seed-mock-api
  ecrImageUri:
    Description: URI of the docker image used to run the api container
    Type: String
    Default: "037295147636.dkr.ecr.us-east-1.amazonaws.com/cp-cipz-seed-mock-api-dev:latest"
  containerPort:
    Description: API container port number
    Type: Number
    Default: 8080
  albListenerPort:
    Description: ALB Listener port number
    Type: Number
    Default: 80
  vpcId:
    Type: String
    Default: "vpc-091c7e3e5578d7a4f"
  subnets:
    Type: CommaDelimitedList
    Default: "subnet-0186b43162a344d9a,subnet-0ad1216eb31e15186"
  taskRoleArn:
    Type: String
    Default: "arn:aws:iam::037295147636:role/cp-cipz-api-task-role"
  taskExecutionRoleArn:
    Type: String
    Default: "arn:aws:iam::037295147636:role/cp-cipz-api-task-execution-role"
  retentionPeriod:
    Description: Log retention period in days
    Type: Number
    Default: 180
    AllowedValues:
      - 90
      - 180
      - 365
      - 400
      - 731
      - 1827
      - 3653
  PONumber:
    Description: PO Number for billing
    Type: String
    Default: '7000002358'
    MinLength: '1'
    MaxLength: '255'
    AllowedPattern: "[\\x20-\\x7E]*"
    ConstraintDescription: Must contain only ASCII characters.
  SGRDSMySQL:
    Description: SG-RDSMySQL
    Type: String
    Default: sg-039f822d40c446322
  snDB:
    Description: Subnets available for the RDS DB Instance
    Type: String
    Default: rds-subnet-group
  ApplicationID:
    Description: Application ID - Official Application_ID, this is generated by Sysco's CMDB
    Type: String
    Default: APP-001151
    MinLength: '1'
    MaxLength: '255'
    AllowedPattern: "[\\x20-\\x7E]*"
    ConstraintDescription: Must contain only ASCII characters.
  ApplicationName:
    Description: Application_Name - Common, user-friendly name
    Type: String
    Default: Cloud Pricing
    MinLength: '1'
    MaxLength: '255'
    AllowedPattern: "[\\x20-\\x7E]*"
    ConstraintDescription: Must contain only ASCII characters.
  Approver:
    Description: Person approving instance funding.  This should be Email address formatted
    Type: String
    Default: villanueva.loi@corp.sysco.com
    MinLength: '1'
    MaxLength: '255'
  Owner:
    Description: Email address usually Product/ Platform Owner, though team distribution list for technical product/platform team contact
    Type: String
    Default: krishan.senevirathne@sysco.com
    MinLength: '1'
    MaxLength: '255'
  SupportEmail:
    Description: Email distribution list for technical product/platform team contact
    Type: String
    Default: 000-BT-PricingPlatform@Corp.sysco.com
    MinLength: '1'
    MaxLength: '255'
  ProjectID:
    Description: Project_ID - BT Project ID for this workload
    Type: String
    Default: BT.001176
    MinLength: '1'
    MaxLength: '255'
    AllowedPattern: "[\\x20-\\x7E]*"
    ConstraintDescription: Must contain only ASCII characters.
  2WTAGGER:
    Description: Used by 2nd Watch Managed Services in shared accounts to determine if a resource is supported
    Type: String
    Default: team-managed
    MinLength: '1'
    MaxLength: '255'
    AllowedValues:
      - team-managed
      - adlm-managed
      - 2w-managed
    ConstraintDescription: Must contain only ASCII characters.
  Platform:
    Description: Platform
    Type: String
    Default: Cloud Pricing
Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Join [ "-", [!Ref namingPrefix, cluster, !Ref environment]]
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Join [ "-", [!Ref namingPrefix, task-definition, !Ref environment]]
      Cpu: 2048
      Memory: 4096
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn: !Ref taskRoleArn
      ExecutionRoleArn: !Ref taskExecutionRoleArn
      ContainerDefinitions:
        - Name: !Ref namingPrefix
          Image: !Ref ecrImageUri
          PortMappings:
            - ContainerPort: !Ref containerPort
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref "AWS::Region"
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: !Ref namingPrefix
          Environment:
            - Name: SERVER_ENVIRONMENT_VARIABLE
              Value: DEV
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref namingPrefix, task-definition, !Ref environment]]
        - Key: Technical:ApplicationName
          Value: !Ref ApplicationName
        - Key: Technical:ApplicationID
          Value: !Ref ApplicationID
        - Key: Technical:PlatformOwner
          Value: !Ref Owner
        - Key: Technical:Environment
          Value: !Ref environment
        - Key: Support_Email
          Value: !Ref SupportEmail
        - Key: Approver
          Value: !Ref Approver
        - Key: PO_Number
          Value: !Ref PONumber
        - Key: Project_ID
          Value: !Ref ProjectID
        - Key: 2WTAGGER
          Value: team_managed
        - Key: Platform
          Value: !Ref Platform
        - Key: Component
          Value: TaskDefinition
  ECSService:
    Type: AWS::ECS::Service
    DependsOn:
      - ALBListener
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: !Join [ "-", [!Ref namingPrefix, service, !Ref environment]]
      TaskDefinition: !Ref TaskDefinition
      LaunchType: FARGATE
      HealthCheckGracePeriodSeconds: 60
      DesiredCount: 1
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !Ref ECSServiceSecurityGroup
          Subnets: !Ref subnets
      LoadBalancers:
        - ContainerName: !Ref namingPrefix
          ContainerPort: !Ref containerPort
          TargetGroupArn: !Ref TargetGroup
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref namingPrefix, ecs-service, !Ref environment]]
        - Key: Technical:ApplicationName
          Value: !Ref ApplicationName
        - Key: Technical:ApplicationID
          Value: !Ref ApplicationID
        - Key: Technical:PlatformOwner
          Value: !Ref Owner
        - Key: Technical:Environment
          Value: !Ref environment
        - Key: Support_Email
          Value: !Ref SupportEmail
        - Key: Approver
          Value: !Ref Approver
        - Key: PO_Number
          Value: !Ref PONumber
        - Key: Project_ID
          Value: !Ref ProjectID
        - Key: 2WTAGGER
          Value: team_managed
        - Key: Platform
          Value: !Ref Platform
        - Key: Component
          Value: ECS Service
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join [ "-", [!Ref namingPrefix, log-group, !Ref environment]]
      RetentionInDays: !Ref retentionPeriod
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Join [ "-", [!Ref namingPrefix, alb, !Ref environment]]
      Scheme: internal
      Subnets: !Ref subnets
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Join [ "-", [cp-cipz-seed, target-group, !Ref environment]]
      Port: !Ref containerPort
      Protocol: HTTP
      TargetType: ip
      VpcId: !Ref vpcId
      HealthCheckPath: '/v1/edwp/health-check'
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 3
  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
  ECSServiceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join [ "-", [!Ref namingPrefix, sg, !Ref environment]]
      GroupDescription: CIPZ Seed Mock API ecs service security group
      VpcId: !Ref vpcId
      SecurityGroupIngress:
        - CidrIp: "10.0.0.0/8"
          IpProtocol: tcp
          FromPort: !Ref containerPort
          ToPort: !Ref containerPort
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join [ "-", [!Ref namingPrefix, alb-sg, !Ref environment]]
      GroupDescription: CIPZ Seed Mock API load balancer security group
      VpcId: !Ref vpcId
      SecurityGroupIngress:
        - CidrIp: "10.0.0.0/8"
          IpProtocol: tcp
          FromPort: !Ref albListenerPort
          ToPort: !Ref albListenerPort
        - CidrIp: "10.0.0.0/8"
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
Outputs:
  LoadBalancerDNS:
    Description: Loadbalancer DNS
    Value: !GetAtt LoadBalancer.DNSName
