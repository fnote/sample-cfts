AWSTemplateFormatVersion: 2010-09-09
Description: "Export service infrastructure"
Parameters:
  EnvironmentShort:
    Description: Environment for application
    Type: String
    Default: DEV
    AllowedValues:
      - DEV
      - QA
      - STG
      - EXE
      - TST
      - PROD
    ConstraintDescription: Must be a valid environment
  Account:
    Description: Type of AWS account under which the code deploy S3 bucket is available
    Type: String
    Default: nonprod
    AllowedValues:
      - nonprod
      - prod
    ConstraintDescription: Must be a valid account name
  CIPZS3Bucket:
    Description: cipz cp s3 bucket
    Type: String
    Default: 'cp-cipz-export-service-intermediate-dev'
  BackupS3Bucket:
    Description: backup s3 bucket
    Type: String
    Default: 'cp-cipz-export-service-backup-dev'
  SeedS3Bucket:
    Description: seed s3 bucket name
    Type: String
    Default: 'rp-data-populator-poc'
  SeedS3Path:
    Description: seed s3 file destination path. Eg - ASE/Inbound/PRC_CUST_ITM_WIL_TO_PAY_AUDT/Source-Data/
    Type: String
    Default: 'ASE/Inbound/PRC_CUST_ITM_WIL_TO_PAY_AUDT/Source-Data/'
  CIPZFilePrefix:
    Description: file prefix name
    Type: String
    Default: 'cipz_'
  ChangeSourceName:
    Description: change source name
    Type: String
    Default: 'CIPZ'
  MsTeamsUrl:
    Description: change source name
    Type: String
    Default: 'https://sysco.webhook.office.com/webhookb2/333723ea-275d-4f46-bf5a-4591e9c67d25@b7aa4308-bf33-414f-9971-6e0c972cbe5d/IncomingWebhook/17787812b92f43ab8f3c936ff23f11b3/52e60d4c-838b-4a02-a71a-a2b638c662fe'
  CIPZMaximumConcurrency:
    Description: Maximum Concurrency Allowed for cipz export service Glue job
    Type: String
    Default: 2
  DatabasePassword:
    Type: String
    Description: Password of the database used for glue connection
    Default: ""
    NoEcho: true
  AvailabilityZoneForGlueConnection:
    Type: String
    Description: The Availability Zone of the glue connection
    Default: us-east-1b
    AllowedValues:
      - us-east-1a
      - us-east-1b
      - us-east-1c
      - us-east-1d
      - us-east-1e
      - us-east-1f
  SecurityGroupListForGlueConnction:
    Type: CommaDelimitedList
    Description: Security group list for glue connection
    Default: sg-06a4893b70fc2f68f
  SubnetIdForGlueConnection:
    Type: String
    Description: The subnetId to be referred
    Default: subnet-0ad1216eb31e15186
  PONumber:
    Description: PO Number for billing
    Type: String
    Default: '7000002358'
    MinLength: '1'
    MaxLength: '255'
    AllowedPattern: "[\\x20-\\x7E]*"
    ConstraintDescription: Must contain only ASCII characters.
  ApplicationID:
    Description: Application ID - Official Application_ID, this is generated by Sysco's
      CMDB
    Type: String
    Default: APP-001151
    MinLength: '1'
    MaxLength: '255'
    AllowedPattern: "[\\x20-\\x7E]*"
    ConstraintDescription: Must contain only ASCII characters.
  ApplicationName:
    Description: Application_Name - Common, user-friendly name
    Type: String
    Default: Cloud Pricing
    MinLength: '1'
    MaxLength: '255'
    AllowedPattern: "[\\x20-\\x7E]*"
    ConstraintDescription: Must contain only ASCII characters.
  Approver:
    Description: Person approving instance funding.  This should be Email address
      formatted
    Type: String
    Default: villanueva.loi@corp.sysco.com
    MinLength: '1'
    MaxLength: '255'
  Owner:
    Description: Email address usually Product/ Platform Owner, though team distribution
      list for technical product/platform team contact
    Type: String
    Default: krishan.senevirathne@sysco.com
    MinLength: '1'
    MaxLength: '255'
  Component:
    Description: Component name
    Type: String
    Default: Reference Pricing Api
  SupportEmail:
    Description: Email distribution list for technical product/platform team contact
    Type: String
    Default: 000-BT-PricingPlatform@Corp.sysco.com
    MinLength: '1'
    MaxLength: '255'
  ProjectID:
    Description: Project_ID - BT Project ID for this workload
    Type: String
    Default: BT.001176
    MinLength: '1'
    MaxLength: '255'
    AllowedPattern: "[\\x20-\\x7E]*"
    ConstraintDescription: Must contain only ASCII characters.
  2WTAGGER:
    Description: Used by 2nd Watch Managed Services in shared accounts to determine
      if a resource is supported
    Type: String
    Default: team-managed
    MinLength: '1'
    MaxLength: '255'
    AllowedValues:
      - team-managed
      - adlm-managed
      - 2w-managed
    ConstraintDescription: Must contain only ASCII characters.
  Platform:
    Description: Platform
    Type: String
    Default: Cloud Pricing V4

Mappings:
  EnvMap:
    DEV:
      val: dev
      name: Development
    QA:
      val: qa
      name: Quality
    STG:
      val: stg
      name: Staging
    EXE:
      val: exe
      name: Execution
    TST:
      val: tst
      name: Tuning
    PROD:
      val: prod
      name: Production

Resources:
  CPCIPZBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub
        - 'cp-cipz-export-service-intermediate-${env}'
        - { env: !FindInMap [ EnvMap, !Ref EnvironmentShort, val ] }
      Tags:
        - Key: Technical:ApplicationName
          Value: !Ref ApplicationName
        - Key: Technical:ApplicationID
          Value: !Ref ApplicationID
        - Key: Technical:PlatformOwner
          Value: !Ref Owner
        - Key: Technical:Environment
          Value: !FindInMap [ EnvMap, !Ref EnvironmentShort, name ]
        - Key: Support_Email
          Value: !Ref SupportEmail
        - Key: Approver
          Value: !Ref Approver
        - Key: PO_Number
          Value: !Ref PONumber
        - Key: Project_ID
          Value: !Ref ProjectID
        - Key: 2WTAGGER
          Value: !Ref 2WTAGGER
        - Key: Platform
          Value: !Ref Platform
        - Key: Component
          Value: !Ref Component

  CIPZBackupStorage:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub
        - 'cp-cipz-export-service-backup-${env}'
        - { env: !FindInMap [ EnvMap, !Ref EnvironmentShort, val ] }
      LifecycleConfiguration:
        Rules:
          - Transitions:
              - StorageClass: GLACIER
                TransitionInDays: 30
            Id: Transition-To-Glacier-Rule
            Status: Enabled
      Tags:
        - Key: Technical:ApplicationName
          Value: !Ref ApplicationName
        - Key: Technical:ApplicationID
          Value: !Ref ApplicationID
        - Key: Technical:PlatformOwner
          Value: !Ref Owner
        - Key: Technical:Environment
          Value: !FindInMap [ EnvMap, !Ref EnvironmentShort, name ]
        - Key: Support_Email
          Value: !Ref SupportEmail
        - Key: Approver
          Value: !Ref Approver
        - Key: PO_Number
          Value: !Ref PONumber
        - Key: Project_ID
          Value: !Ref ProjectID
        - Key: 2WTAGGER
          Value: !Ref 2WTAGGER
        - Key: Platform
          Value: !Ref Platform
        - Key: Component
          Value: !Ref Component
  TriggerExportServiceLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'CP-CIPZ-ExportService-TriggerLambdaRole-${EnvironmentShort}'
      PermissionsBoundary: !Sub 'arn:aws:iam::${AWS::AccountId}:policy/PermissionBoundary-DevOps'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: CP-REF-ExecuteGlueJobPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - glue:GetJobs
                  - glue:BatchStopJobRun
                  - glue:ListJobs
                  - glue:CreateJob
                  - glue:BatchGetJobs
                  - glue:StartJobRun
                  - glue:GetJobRun
                  - glue:UpdateJob
                  - glue:GetJobRuns
                  - glue:GetJob
                Resource: "*"
      Path: '/'
  CommonDatabaseConnection:
    Type: AWS::Glue::Connection
    Properties:
      CatalogId: !Ref AWS::AccountId
      ConnectionInput:
        ConnectionProperties: {
          "JDBC_CONNECTION_URL": !Join ['', ["{{resolve:ssm:/CP/CIPZ_SERVICE/", !Ref EnvironmentShort, "/CIPZ/DB/ENDPOINT/WRITER:1}}"]],
          "USERNAME": !Join ['', ["{{resolve:ssm:/CP/CIPZ_SERVICE/", !Ref EnvironmentShort, "/CIPZ/DB/USERNAME:1}}"]],
          # SSM Secure reference is not supported in: [AWS::glue::Connection]
          "PASSWORD": !Ref DatabasePassword
        }
        Description: Glue Connection to Referrence pricing database
        ConnectionType: JDBC
        Name: !Sub 'cp-cipz-export-service-connection-${EnvironmentShort}'
        PhysicalConnectionRequirements:
          AvailabilityZone: !Ref AvailabilityZoneForGlueConnection
          SecurityGroupIdList: !Ref SecurityGroupListForGlueConnction
          SubnetId: !Ref SubnetIdForGlueConnection

  ExportServiceGlueRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'CP-CIPZ-ExportService-GlueRole-${EnvironmentShort}'
      PermissionsBoundary: !Sub 'arn:aws:iam::${AWS::AccountId}:policy/PermissionBoundary-DevOps'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - 'glue.amazonaws.com'
                - rds.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
        - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/CloudPricing-IAM-SSM-Policy'
      Policies:
        - PolicyName: CP-CIPZ-ExportServicePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                  - logs:PutLogEvents
                  - logs:AssociateKmsKey
                Resource: 'arn:aws:logs:*:*:/aws-glue/*'
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub 'arn:aws:s3:::sysco-us-east-1-prcp-${Account}-codedeploy/CIPZ/ExportService/*'
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                Resource: !Sub
                  - 'arn:aws:s3:::cp-cipz-export-service-intermediate-${env}/*'
                  - { env: !FindInMap [ EnvMap, !Ref EnvironmentShort, val ] }
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: !Sub
                  - 'arn:aws:s3:::cp-cipz-export-service-backup-${env}/*'
                  - { env: !FindInMap [ EnvMap, !Ref EnvironmentShort, val ] }
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: !Sub
                  - 'arn:aws:s3:::rp-data-populator-poc/*'
                  - { env: !FindInMap [ EnvMap, !Ref EnvironmentShort, val ] }
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: !Sub
                  - 'arn:aws:s3:::${SeedS3Bucket}/*'
                  - { env: !FindInMap [ EnvMap, !Ref EnvironmentShort, val ] }
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource: !Sub 'arn:aws:sns:us-east-1:${AWS::AccountId}:CP-CIPZ-Export-Service-Notification-${EnvironmentShort}'
      Path: '/'
  SeedS3:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Join ['', ['/CP/', !Ref EnvironmentShort, '/CIPZ/EXPORT_SERVICE/SEED_BUCKET']]
      Type: String
      Value: !Ref SeedS3Bucket
      Tier: Standard
      Description: seed s3 bucket name

  SeedS3PathSSM:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Join ['', ['/CP/', !Ref EnvironmentShort, '/CIPZ/EXPORT_SERVICE/SEED_PATH']]
      Type: String
      Value: !Ref SeedS3Path
      Tier: Standard
      Description: Seed s3 file destination path. Should not begin the path with "/"

  CPCIPZS3:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Join ['', ['/CP/', !Ref EnvironmentShort, '/CIPZ/EXPORT_SERVICE/CP_BUCKET']]
      Type: String
      Value: !Ref CIPZS3Bucket
      Tier: Standard
      Description: cloud pricing cipz bucket name

  BackupS3:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Join ['', ['/CP/', !Ref EnvironmentShort, '/CIPZ/EXPORT_SERVICE/BACKUP_BUCKET']]
      Type: String
      Value: !Ref BackupS3Bucket
      Tier: Standard
      Description: backup s3 bucket name

  FilePrefix:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Join ['', ['/CP/', !Ref EnvironmentShort, '/CIPZ/EXPORT_SERVICE/FILE_PREFIX']]
      Type: String
      Value: !Ref CIPZFilePrefix
      Tier: Standard
      Description: file prefix used

  ChangeSource:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Join [ '', [ '/CP/', !Ref EnvironmentShort, '/CIPZ/EXPORT_SERVICE/CHANGE_SOURCE' ] ]
      Type: String
      Value: !Ref ChangeSourceName
      Tier: Standard
      Description: change source so seed can identify the source of incoming data

  TeamsURL:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Join ['', ['/CP/', !Ref EnvironmentShort, '/CIPZ/EXPORT_SERVICE/TEAMS_WEBHOOK_URL']]
      Type: String
      Value: !Ref MsTeamsUrl
      Description: teams url to send export service notifications to

  SNSArn:
    Type: AWS::SSM::Parameter
    DependsOn: ExportServiceNotificationsSNSTopic
    Properties:
      Name: !Join [ '', [ '/CP/', !Ref EnvironmentShort, '/CIPZ/EXPORT_SERVICE/EXPORT_SERVICE_SNS_ARN' ] ]
      Type: String
      Value: !Ref ExportServiceNotificationsSNSTopic
      Description: arn of the export service notification sns topic

  ExportServiceGlueJob:
    Type: AWS::Glue::Job
    Properties:
      Command:
        Name: pythonshell
        PythonVersion: 3
        ScriptLocation: !Sub 's3://sysco-us-east-1-prcp-${Account}-codedeploy/CIPZ/ExportService/${EnvironmentShort}/export_service.py'
      Connections:
        Connections:
          - !Ref CommonDatabaseConnection
      DefaultArguments:
        "--job-bookmark-option": "job-bookmark-disable"
        "--extra-py-files": !Sub "s3://sysco-us-east-1-prcp-${Account}-codedeploy/CIPZ/ExportService/libraries/smart_open-2.1.0-py3.6.egg,s3://sysco-us-east-1-prcp-${Account}-codedeploy/CIPZ/ExportService/libraries/PyMySQL-1.0.2-py3-none-any.whl,s3://sysco-us-east-1-prcp-${Account}-codedeploy/CIPZ/ExportService/libraries/tenacity-7.0.0-py3-none-any.whl"
        "--env": !Ref EnvironmentShort
        "--GLUE_CONNECTION_NAME": !Ref CommonDatabaseConnection
        "--enable-continuous-cloudwatch-log": "true"
        "--enable-continuous-log-filter": "true"
      ExecutionProperty:
        MaxConcurrentRuns: !Ref CIPZMaximumConcurrency
      GlueVersion: 1.0
      MaxRetries: 0
      MaxCapacity: 1.0
      Timeout: 4320
      Name: !Sub 'CP-CIPZ-export-service-job-${EnvironmentShort}'
      Role: !Ref ExportServiceGlueRole
      Tags: {
        'Technical:ApplicationName': !Ref ApplicationName,
        'Technical:ApplicationID': !Ref ApplicationID,
        'Technical:PlatformOwner': !Ref Owner,
        'Technical:Environment': !FindInMap [ EnvMap, !Ref EnvironmentShort, name ],
        'Support_Email': !Ref SupportEmail,
        'Approver': !Ref Approver,
        'PO_Number': !Ref PONumber,
        'Project_ID': !Ref ProjectID,
        '2WTAGGER': !Ref 2WTAGGER,
        'Platform': !Ref Platform,
        'Component': !Ref Component
      }

  ExportServiceTriggerLambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: Lambda function that triggers export service glue job
      FunctionName: !Sub 'CP-CIPZ-export-service-trigger-${EnvironmentShort}'
      Runtime: python3.7
      Role: !GetAtt TriggerExportServiceLambdaRole.Arn
      Handler: index.lambda_handler
      Code:
        ZipFile: |
          import json
          import os
          import logging
          import boto3
          from botocore.config import Config

          logger = logging.getLogger()
          logger.setLevel(logging.INFO)

          boto3_config = Config(
              retries={
                  'max_attempts': 15
              }
          )
          client = boto3.client('glue')

          def lambda_handler(event, context):
              logger.info('## TRIGGERED BY EVENT: ')
              logger.info(event)
              env = os.environ['env']
              glue_job_name = 'CP-CIPZ-export-service-job-' + env
              response = client.start_job_run(JobName=glue_job_name)

              logger.info('## STARTED GLUE JOB: ' + glue_job_name)
              logger.info('## GLUE JOB RUN ID: ' + response['JobRunId'])
              return response
      Environment:
        Variables:
          env: !Ref EnvironmentShort
      Timeout: 60
      Tags:
        - Key: Technical:ApplicationName
          Value: !Ref ApplicationName
        - Key: Technical:ApplicationID
          Value: !Ref ApplicationID
        - Key: Technical:PlatformOwner
          Value: !Ref Owner
        - Key: Technical:Environment
          Value: !FindInMap [ EnvMap, !Ref EnvironmentShort, name ]
        - Key: Support_Email
          Value: !Ref SupportEmail
        - Key: Approver
          Value: !Ref Approver
        - Key: PO_Number
          Value: !Ref PONumber
        - Key: Project_ID
          Value: !Ref ProjectID
        - Key: 2WTAGGER
          Value: !Ref 2WTAGGER
        - Key: Platform
          Value: !Ref Platform
        - Key: Component
          Value: !Ref Component

  ExportServiceInvocationScheduledRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "ExportServiceInvocationScheduledRule"
      Name: !Sub 'CP-CIPZ-Export-Service-Notification-${EnvironmentShort}'
      ScheduleExpression: "cron(30 23 ? * MON-FRI *)"
      State: "ENABLED"
      Targets:
        - Arn:
            Fn::GetAtt:
              - "ExportServiceTriggerLambda"
              - "Arn"
          Id: "TargetFunctionV1"
  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Sub 'CP-CIPZ-export-service-trigger-${EnvironmentShort}'
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - "ExportServiceInvocationScheduledRule"
          - "Arn"


  ExportServiceNotificationsSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub 'CP-CIPZ-Export-Service-Notification-${EnvironmentShort}'

Outputs:
  TriggerExportServiceLambdaRoleArn:
    Description: ETL trigger export service lambda role arn
    Value: !GetAtt TriggerExportServiceLambdaRole.Arn


