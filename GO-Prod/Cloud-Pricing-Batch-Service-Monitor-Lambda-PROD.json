{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description": "Cloud formation template for Cloud Pricing Batch Service Monitor Lambda for EXE environment",
  "Parameters": {
    "PONumber": {
      "Description": "PO Number for billing",
      "Type": "String",
      "Default": "7000002358",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern": "[\\x20-\\x7E]*",
      "ConstraintDescription": "Must contain only ASCII characters."
    },
    "PvtSNa": {
      "Description": "Private PRCP Confidential Subnet 1 in us-east-1a CIDR: 10.132.88.0/24",
      "Type": "String",
      "Default": "subnet-03f5516cc0d29f5ad"
    },
    "PvtSNb": {
      "Description": "Private PRCP Confidential Subnet 2 in us-east-1b CIDR: 10.132.89.0/24",
      "Type": "String",
      "Default": "subnet-094d9ade488a4f20b"
    },
    "PvtSNc": {
      "Description": "Private PRCP Confidential Subnet 3 in us-east-1c CIDR: 10.132.90.0/24",
      "Type": "String",
      "Default": "subnet-0f279e0609eb542b2"
    },
    "VPCID": {
      "Description": "Name of and existing VPC",
      "Type": "String",
      "Default": "vpc-0f55b12524f7459f9"
    },
    "SGDNS": {
      "Description": "PRCP-DNS-DNSSG-1LVAMR19KIKFS",
      "Type": "String",
      "Default": "sg-086420a2869e44e81"
    },
    "SGRDSMySQL": {
      "Description": "SG-RDSMySQL",
      "Type": "String",
      "Default": "sg-0914feb8b95bd48c7"
    },
    "SGWebServices": {
      "Description": "SG-WebServices",
      "Type": "String",
      "Default": "sg-0abcdcef90427fcd7"
    },
    "S3CodeBucket" : {
      "Type" : "String",
      "Description" : "S3 bucket for the Lambda Code",
      "Default": "sysco-us-east-1-prcp-prod-codedeploy"
    },
    "S3CodeKey" : {
      "Type" : "String",
      "Description" : "S3 bucket key for the Lambda Code",
      "Default": "BatchPricing/BatchMonitor/batch-service-monitor-1.0.0.zip"
    },
    "FunctionName" : {
      "Type" : "String",
      "Description" : "Name of the Lambda function for Batch Service Monitor",
      "Default": "Cloud-Pricing-Batch-Service-Monitor-"
    },
    "IAMRole" : {
      "Type" : "String",
      "Description" : "IAM role attached to the Lambda funvtion",
      "Default": "arn:aws:iam::130227353653:role/CloudPricing-IAM-Lambda-Role"
    },
    "CommonDBName" : {
      "Type" : "String",
      "Description" : "Name of the Common DB",
      "Default": "CPPDB_Common01"
    },
    "CommonDBUserName" : {
      "Type" : "String",
      "Description" : "User name of the Common DB",
      "Default": "svccp000"
    },
    "CommonDBPassword" : {
      "Type" : "String",
      "Description" : "User password of the Common DB",
      "Default": "TBD"
    },
    "CommonDBURL" : {
      "Type" : "String",
      "Description" : "URL for Common DB",
      "Default": "cpp01dbcluster.cluster-cvxmi1m5icyf.us-east-1.rds.amazonaws.com"
    },
    "ApplicationName": {
      "Description": "Name of application",
      "Type": "String",
      "Default": "Cloud Pricing",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern": "[\\x20-\\x7E]*",
      "ConstraintDescription": "Must contain only ASCII characters."
    },
    "ApplicationId": {
      "Description": "Application ID",
      "Type": "String",
      "Default": "APP-001151",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern": "[\\x20-\\x7E]*",
      "ConstraintDescription": "Must contain only ASCII characters."
    },
    "Approver": {
      "Description": "Person approving instance funding.  This should be Email address formatted",
      "Type": "String",
      "Default": "villanueva.loi@corp.sysco.com",
      "MinLength": "1",
      "MaxLength": "255"
    },
    "Owner": {
      "Description": "Email address usually Product/ Platform Owner, though team distribution list for technical product/platform team contact",
      "Type": "String",
      "Default": "villanueva.loi@corp.sysco.com",
      "MinLength": "1",
      "MaxLength": "255"
    },
    "ProjectId": {
      "Description": "Project ID",
      "Type": "String",
      "Default": "BT.001176",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern": "[\\x20-\\x7E]*",
      "ConstraintDescription": "Must contain only ASCII characters."
    },
    "2WTAGGER": {
      "Description": "Used by 2nd Watch Managed Services in shared accounts to determine if a resource is supported",
      "Type": "String",
      "Default": "team-managed",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedValues": [
        "team-managed",
        "adlm-managed",
        "2w-managed"
      ],
      "ConstraintDescription": "Must contain only ASCII characters."
    },
    "Platform": {
      "Description": "Platform",
      "Type": "String",
      "Default": "Cloud Pricing V4"
    },
    "Environment": {
      "Description": "Environment for application",
      "Type": "String",
      "Default": "Production",
      "AllowedValues": [
        "Sandbox",
        "Development",
        "Quality",
        "Staging",
        "Tuning",
        "Execution",
        "Training",
        "Production"
      ],
      "ConstraintDescription": "Must be a valid environment."
    },
    "EnvironmentShort": {
      "Description": "Environment for application",
      "Type": "String",
      "Default": "PROD",
      "AllowedValues": [
        "DEV",
        "QA",
        "STG",
        "EXE",
        "PROD"
      ],
      "ConstraintDescription": "Must be a valid environment."
    },
    "ScheduleRate" : {
      "Type" : "String",
      "Description" : "Rate at which the lambda is scheduled to execute",
      "Default": "rate(20 minutes)"
    }
  },
  "Resources" : {
    "LFunctionCP01": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": { "Ref": "S3CodeBucket" },
          "S3Key": { "Ref": "S3CodeKey" }
        },
        "FunctionName": { "Fn::Join" : ["", [{"Ref" : "FunctionName"}, { "Ref" : "EnvironmentShort" }]]},
        "Handler": "app.handler.BatchMonitorHandler.execute",
        "Runtime": "python3.7",
        "Description": "Controller function for Cloud Pricing Batch Service Monitor",
        "MemorySize": 512,
        "Timeout": 300,
        "Role": { "Ref": "IAMRole" },
        "VpcConfig": {
          "SecurityGroupIds": [{ "Ref" : "SGDNS" }, { "Ref" : "SGRDSMySQL" }, { "Ref" : "SGWebServices" }],
          "SubnetIds": [
            { "Ref": "PvtSNa" },
            { "Ref": "PvtSNb" },
            { "Ref": "PvtSNc"}
          ]
        },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Join" : ["", ["cp-batch-service-monitor-", { "Ref" : "EnvironmentShort" }]]}},
          { "Key" : "Application_Name", "Value" : { "Ref" : "ApplicationName" } },
          { "Key" : "Application_Id", "Value" : { "Ref" : "ApplicationId" } },
          { "Key" : "Owner", "Value" : { "Ref" : "Owner" } },
          { "Key" : "Approver", "Value" : { "Ref" : "Approver" } },
          { "Key" : "PO_Number", "Value" : { "Ref" : "PONumber" } },
          { "Key" : "Environment", "Value" : { "Ref" : "Environment" } },
          { "Key" : "Project_ID", "Value" : { "Ref" : "ProjectId" } },
          { "Key" : "2WTAGGER", "Value" : { "Ref" : "2WTAGGER" } },
          { "Key" : "Platform", "Value" : { "Ref" : "Platform" } },
          { "Key" : "Component", "Value": "Lambda Batch Service Monitor" }
        ],
        "Environment": {
          "Variables": {
            "COMMONDB_NAME": { "Ref" : "CommonDBName" },
            "COMMONDB_USERNAME": { "Ref" : "CommonDBUserName" },
            "COMMONDB_PASSWORD": { "Ref" : "CommonDBPassword" },
            "COMMONDB_URL": { "Ref" : "CommonDBURL" },
            "SERVER_ENVIRONMENT_VARIABLE": { "Ref" : "EnvironmentShort" }
          }
        }
      }
    },
    "ScheduledRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "ScheduledRule",
        "ScheduleExpression":  { "Ref" : "ScheduleRate" },
        "State": "ENABLED",
        "Targets": [{
          "Arn": { "Fn::GetAtt": ["LFunctionCP01", "Arn"] },
          "Id": "TargetFunctionV1"
        }]
      }
    },
    "PermissionForEventsToInvokeLambda": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": { "Fn::Join" : ["", [{"Ref" : "FunctionName"}, { "Ref" : "EnvironmentShort" }]]},
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": { "Fn::GetAtt": ["ScheduledRule", "Arn"] }
      }
    }
  }
}
