{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "AWS CloudFormation Template to create resources related to Ecommerce pricing web service and data populator in PROD environmnet",
	"Parameters": {
		"PONumber": {
			"Description": "PO Number for billing",
			"Type": "String",
			"Default": "7000002358",
			"MinLength": "1",
			"MaxLength": "255",
			"AllowedPattern": "[\\x20-\\x7E]*",
			"ConstraintDescription": "Must contain only ASCII characters."
		},
		"PvtSNa": {
			"Description": "Private PRCP Confidential Subnet 1 in us-east-1a CIDR: 10.132.88.0/24",
			"Type": "String",
			"Default": "subnet-03f5516cc0d29f5ad"
		},
		"PvtSNb": {
			"Description": "Private PRCP Confidential Subnet 2 in us-east-1b CIDR: 10.132.89.0/24",
			"Type": "String",
			"Default": "subnet-094d9ade488a4f20b"
		},
		"PvtSNc": {
			"Description": "Private PRCP Confidential Subnet 3 in us-east-1c CIDR: 10.132.90.0/24",
			"Type": "String",
			"Default": "subnet-0f279e0609eb542b2"
		},
		"VPCID": {
			"Description": "Name of and existing VPC",
			"Type": "String",
			"Default": "vpc-0f55b12524f7459f9"
		},
		"DNSSG": {
			"Description": "PRCP-DNS-DNSSG-1LVAMR19KIKFS",
			"Type": "String",
			"Default": "sg-086420a2869e44e81"
		},
		"SGRDSMySQL": {
			"Description": "SG-RDSMySQL",
			"Type": "String",
			"Default": "sg-0914feb8b95bd48c7"
		},
		"SGWebServices": {
			"Description": "SG-WebServices",
			"Type": "String",
			"Default": "sg-0abcdcef90427fcd7"
		},
		"SGELBs": {
			"Description": "SG-ELBs",
			"Type": "String",
			"Default": "sg-01b6a8878e22de7a0"
		},
		"PemKey": {
			"Description": "Name of and existing EC2 KeyPair to enable SSH access to the instance",
			"Type": "String",
			"Default": "KeyPair-Sysco-CloudPricing-Prod"
		},
		"CommonAMI": {
			"Description" : "CP-Linux-Base-20190531 -> ami-0321a6ac5fe506c98",
			"Type": "String",
			"Default" : "ami-089a2dce1e6a846af",
			"AllowedPattern" : "^ami-[0-9a-fA-F]{17}",
			"ConstraintDescription" : "Must be a valid AMI."
		},
		"InstanceProfile": {
			"Description" : "Instance Profile Name",
			"Type" : "String",
			"Default" : "Cloud-Pricing-Ecom-Service-Instance-Profile"
		},
		"DBUser": {
			"Description": "The database admin account username",
			"Type": "String",
			"MinLength": "1",
			"MaxLength": "16",
			"AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
			"ConstraintDescription": "must begin with a letter and contain only alphanumeric characters.",
			"Default": "cpuser"
		},
		"DBPassword": {
			"NoEcho": "true",
			"Description": "The database admin account password",
			"Type": "String",
			"MinLength": "1",
			"MaxLength": "41",
			"AllowedPattern": "[a-zA-Z0-9]+",
			"ConstraintDescription": "must contain only alphanumeric characters.",
			"Default": "a4T6XrIXJGwp"
		},
		"SSLCertificate": {
			"Description": "The SSL acertificate ARN",
			"Type": "String",
			"ConstraintDescription": "must be a valid SSL ARN",
			"Default": "arn:aws:acm:us-east-1:130227353653:certificate/47ddc5ee-a710-47de-a371-fc99c3545927"
		},
		"ApplicationID": {
			"Description": "Application ID - Official Application_ID, this is generated by Sysco's CMDB",
			"Type": "String",
			"Default": "APP-001151",
			"MinLength": "1",
			"MaxLength": "255",
			"AllowedPattern": "[\\x20-\\x7E]*",
			"ConstraintDescription": "Must contain only ASCII characters."
		},
		"ApplicationName": {
			"Description": "Application_Name - Common, user-friendly name",
			"Type": "String",
			"Default": "Cloud Pricing",
			"MinLength": "1",
			"MaxLength": "255",
			"AllowedPattern": "[\\x20-\\x7E]*",
			"ConstraintDescription": "Must contain only ASCII characters."
		},
		"Approver": {
			"Description": "Person approving instance funding.  This should be Email address formatted",
			"Type": "String",
			"Default": "villanueva.loi@corp.sysco.com",
			"MinLength": "1",
			"MaxLength": "255"
		},
		"Owner": {
			"Description": "Email address usually Product/ Platform Owner, though team distribution list for technical product/platform team contact",
			"Type": "String",
			"Default": "krishan.senevirathne@sysco.com",
			"MinLength": "1",
			"MaxLength": "255"
		},
		"SupportEmail": {
			"Description": "Email distribution list for technical product/platform team contact",
			"Type": "String",
			"Default": "000-BT-PricingPlatform@Corp.sysco.com",
			"MinLength": "1",
			"MaxLength": "255"
		},
		"ProjectID": {
			"Description": "Project_ID - BT Project ID for this workload",
			"Type": "String",
			"Default": "BT.001176",
			"MinLength": "1",
			"MaxLength": "255",
			"AllowedPattern": "[\\x20-\\x7E]*",
			"ConstraintDescription": "Must contain only ASCII characters."
		},
		"2WTAGGER": {
			"Description": "Used by 2nd Watch Managed Services in shared accounts to determine if a resource is supported",
			"Type": "String",
			"Default": "team-managed",
			"MinLength": "1",
			"MaxLength": "255",
			"AllowedValues": [
				"team-managed",
				"adlm-managed",
				"2w-managed"
			],
			"ConstraintDescription": "Must contain only ASCII characters."
		},
		"CMPbackup": {
			"Description": "CMP_backup - This tag is used by 2W document appropriate backup policy for managed workloads",
			"Type": "String",
			"Default": "sysco_monthly_12",
			"MinLength": "1",
			"MaxLength": "255",
			"AllowedValues": [
				"sysco_daily_7",
				"sysco_daily_14",
				"sysco_daily_30",
				"sysco_weekly_4",
				"sysco_monthly_12"
			]
		},
		"Platform": {
			"Description": "Platform",
			"Type": "String",
			"Default": "RevMan MarketPricing V1"
		},
		"Environment": {
			"Description": "Name of logical build environment designated for service.",
			"Type": "String",
			"Default": "Production",
			"AllowedValues": [
				"Development",
				"Quality",
				"Staging",
				"Tuning",
				"Execution",
				"Production"
			],
			"ConstraintDescription": "Must be a valid environment."
		},
		"EnvironmentShort": {
			"Description": "Environment for application",
			"Type": "String",
			"Default": "PROD",
			"AllowedValues": [
				"DEV",
				"QA",
				"STG",
				"EXE",
				"TST",
				"PROD"
			],
			"ConstraintDescription": "Must be a valid environment."
		},
		"DynatraceApplicationName": {
			"Description": "Dynatrace Application Name",
			"Type": "String",
			"Default": "cp-ecomm-service"
		}
	},
	"Resources": {
		"WebServiceGroup" : {
			"Type" : "AWS::AutoScaling::AutoScalingGroup",
			"Properties" : {
				"AvailabilityZones" : [ "us-east-1a", "us-east-1b", "us-east-1c" ],
				"LaunchConfigurationName" : { "Ref" : "WebServiceLaunchConfig" },
				"TargetGroupARNs": [ {"Ref" : "TargetGroup"} ],
				"MinSize" : "2",
				"DesiredCapacity" : "2",
				"MaxSize" : "4",
				"HealthCheckType": "ELB",
				"HealthCheckGracePeriod": "300",
				"VPCZoneIdentifier" : [ { "Ref" : "PvtSNa" }, { "Ref" : "PvtSNb" }, { "Ref" : "PvtSNc" } ],
				"Tags" : [
					{ "Key" : "Name", "Value" : { "Fn::Join" : ["", ["Ecomm Pricing WebService AutoScaling-", { "Ref" : "EnvironmentShort" }]]}, "PropagateAtLaunch" : "true" },
					{ "Key" : "Technical:ApplicationName", "Value" : { "Ref" : "ApplicationName" }, "PropagateAtLaunch" : "true" },
					{ "Key" : "Technical:ApplicationID", "Value" : { "Ref" : "ApplicationID" }, "PropagateAtLaunch" : "true" },
					{ "Key" : "Technical:PlatformOwner", "Value" : { "Ref" : "Owner" }, "PropagateAtLaunch" : "true" },
					{ "Key" : "Technical:Environment", "Value" : { "Ref" : "Environment" }, "PropagateAtLaunch" : "true" },
					{ "Key" : "Technical:ApplicationSubName", "Value": "Price Web Service 04", "PropagateAtLaunch" : "true" },
					{ "Key" : "Technical:ApplicationRole", "Value" : "Auto Scaling Group", "PropagateAtLaunch" : "true"  },
					{ "Key" : "Approver", "Value" : { "Ref" : "Approver" }, "PropagateAtLaunch" : "true" },
					{ "Key" : "PO_Number", "Value" : { "Ref" : "PONumber" }, "PropagateAtLaunch" : "true" },
					{ "Key" : "SupportEmail", "Value" : { "Ref" : "SupportEmail" }, "PropagateAtLaunch" : "true" },
					{ "Key" : "Project_ID", "Value" : { "Ref" : "ProjectID" }, "PropagateAtLaunch" : "true" },
					{ "Key" : "2WTAGGER", "Value" : { "Ref" : "2WTAGGER" }, "PropagateAtLaunch" : "true" },
					{ "Key" : "Platform", "Value" : { "Ref" : "Platform" }, "PropagateAtLaunch" : "true" },
					{ "Key" : "Component", "Value": "Price Web Service 04", "PropagateAtLaunch" : "true" }
				]
			},
			"UpdatePolicy" : {
				"AutoScalingScheduledAction" : {
					"IgnoreUnmodifiedGroupSizeProperties" : "true"
				},
				"AutoScalingRollingUpdate" : {
					"MinInstancesInService" : "1",
					"MaxBatchSize" : "1",
					"PauseTime" : "PT1M",
					"WaitOnResourceSignals" : "false"
				}
			}
		},
		"WebServiceLaunchConfig" : {
			"Type" : "AWS::AutoScaling::LaunchConfiguration",
			"Properties" : {
				"ImageId" : {"Ref" : "CommonAMI"},
				"InstanceType" : "t3.large",
				"KeyName" : { "Ref" : "PemKey" },
				"SecurityGroups" : [{ "Ref" : "DNSSG" }, { "Ref" : "SGWebServices" }],
				"IamInstanceProfile" : { "Ref" : "InstanceProfile" },
				"BlockDeviceMappings" : [
					{"DeviceName": "/dev/xvda", "Ebs": { "VolumeSize": "65", "VolumeType": "gp2" }}
				],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash -v\n",
					"# Set Timezone\n",
					"# timedatectl set-timezone UTC\n",
					"date > /home/ec2-user/starttime\n",

					"##############################################\n",
					"# Change Name of server to match new hostname\n",
					"##############################################\n",
					"sh -c \"hostname rmwebsvc-$(curl http://169.254.169.254/latest/meta-data/local-ipv4/ -s).na.sysco.net\"\n",
					"tee /etc/sysconfig/network <<-EOF\n",
					"NETWORKING=yes\n",
					"HOSTNAME=rmwebsvc-$(curl http://169.254.169.254/latest/meta-data/local-ipv4/ -s).na.sysco.net\n",
					"NOZEROCONF=yes\n",
					"EOF\n",

					"############################################Ecomm_Service##\n",
					"# Add Users to server\n",
					"##############################################\n",
					"usermod -a -G aix lvil8747\n",
					"usermod -a -G aix sshe7956\n",
					"usermod -a -G aix lchi0638\n",
					"usermod -a -G aix ksen0887\n",
					"usermod -a -G aix iasa0862\n",
					"usermod -a -G aix cwic0864\n",
					"usermod -a -G aix adis0892\n",
					"usermod -a -G aix gher1098\n",
					"usermod -a -G aix gkar5861\n",

					"##############################################\n",
					"# Increase open file limits\n",
					"##############################################\n",
					"sh -c \"echo \\\"*   soft   nofile   50000\\\" >> /etc/security/limits.conf\"\n",
					"sh -c \"echo \\\"*   hard   nofile   102400\\\" >> /etc/security/limits.conf\"\n",

					"##############################################\n",
					"# Set System Environment\n",
					"##############################################\n",
					"sh -c \"echo 'export SERVER_ENVIRONMENT_VARIABLE=", { "Ref" : "EnvironmentShort" }, "'\" > /etc/profile.d/cpsettings.sh\n",
					"sh -c \"echo 'SERVER_ENVIRONMENT_VARIABLE=", { "Ref" : "EnvironmentShort" }, "'\" > /etc/environment\n",

					"##############################################\n",
					"# Install Dependencies.\n",
					"# JavaJDK, Dynatrace Agent, code delpoy agent, cloud watch agent\n",
					"##############################################\n",
					"yum -y update\n",
					"cd /tmp\n",
					"aws s3 cp s3://sysco-us-east-1-prcp-prod-codedeploy/Tools/ . --recursive\n",
					"yum install -y jdk-8u131-linux-x64.rpm\n",

					"wget --no-check-certificate -t 1 -O Dynatrace-OneAgent-Linux-1.169.172.sh \"https://cww56350.live.dynatrace.com/api/v1/deployment/installer/agent/unix/default/latest?Api-Token=iKxGGC4HRFKlYGbgsYt_g&amp;arch=x86&amp;flavor=default\"\n",
					"wget -t 1 https://ca.dynatrace.com/dt-root.cert.pem ; ( echo 'Content-Type: multipart/signed; protocol=\"application/x-pkcs7-signature\"; micalg=\"sha-256\"; boundary=\"--SIGNED-INSTALLER\"'; echo ; echo ; echo '----SIGNED-INSTALLER' ; cat Dynatrace-OneAgent-Linux-1.169.172.sh ) | openssl cms -verify -CAfile dt-root.cert.pem > /dev/null\n",
					"/bin/sh Dynatrace-OneAgent-Linux-1.169.172.sh  APP_LOG_CONTENT_ACCESS=1 INFRA_ONLY=0 HOST_GROUP=bts-cloudpricing-prod-", { "Ref" : "DynatraceApplicationName" }, "\n",

					"count=1\n",
					"currentStatus=$(service codedeploy-agent status)\n",
					"while [[ ! $currentStatus == *\"running as PID\"* ]]\n",
					"do\n",
					"if [ $count -le 3 ]\n",
					"then\n",
					"rm -f codeDeployInstaller\n",
					"wget -cO - https://aws-codedeploy-us-east-1.s3.us-east-1.amazonaws.com/latest/install > codeDeployInstaller\n",
					"chmod +x ./codeDeployInstaller\n",
					"./codeDeployInstaller auto\n",
					"currentStatus=$(service codedeploy-agent status)\n",
					"((count++))\n",
					"else\n",
					"shutdown now\n",
					"fi\n",
					"done\n",

					"yum install -y splunkforwarder-8.0.1-6db836e2fb9e-linux-2.6-x86_64.rpm\n",

					"wget https://s3.amazonaws.com/amazoncloudwatch-agent/amazon_linux/amd64/latest/amazon-cloudwatch-agent.rpm\n",
					"rpm -U ./amazon-cloudwatch-agent.rpm\n",

					"##############################################\n",
					"# Splunk - Configuration\n",
					"##############################################\n",
					"SPLUNK_PASSWORD=$(aws --region=us-east-1 ssm get-parameters --names \"/SPLUNK/FORWARDER/PASSWORD\"  --output text --query \"Parameters[*].Value\")\n",

					"cat > /opt/splunkforwarder/etc/system/local/user-seed.conf <<EOF\n",
					"[user_info]\n",
					"USERNAME = admin\n",
					"PASSWORD = $SPLUNK_PASSWORD\n",
					"EOF\n",

					"/opt/splunkforwarder/bin/splunk clone-prep-clear-config\n",
					"/opt/splunkforwarder/bin/splunk enable boot-start --accept-license --answer-yes --no-prompt\n",
					"/opt/splunkforwarder/bin/splunk set deploy-poll splunkdeploy.na.sysco.net:8089 -auth admin:$SPLUNK_PASSWORD\n",
					"/opt/splunkforwarder/bin/splunk add forward-server splunkindex.na.sysco.net:9997 -auth admin:$SPLUNK_PASSWORD\n",

					"##############################################\n",
					"# CloudWatch Configuration\n",
					"##############################################\n",

					"cd /opt/aws/amazon-cloudwatch-agent/bin\n",
					"./amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c ssm:/CP/ECOMM_SERVICE/", { "Ref" : "EnvironmentShort" } ,"/CLOUDWATCH -s\n",

					"cd /tmp\n",

					"date > /home/ec2-user/stoptime"

				]]}}
			}
		},
		"CPUAlarmHigh" : {
			"Type" : "AWS::CloudWatch::Alarm",
			"DependsOn": "WebServiceGroup",
			"Properties" : {
				"AlarmName" : { "Fn::Join" : ["", ["Ecomm-WebService-CPU-ScaleUp-", { "Ref" : "EnvironmentShort" }]]},
				"Dimensions" : [{ "Name" : "AutoScalingGroupName", "Value" : { "Ref" : "WebServiceGroup" }}],
				"AlarmDescription" : "Scale-up if Avg CPU > 50% for 3 minutes or 3-1 minute periods",
				"Namespace" : "AWS/EC2",
				"MetricName" : "CPUUtilization",
				"Statistic" : "Average",
				"ComparisonOperator" : "GreaterThanThreshold",
				"Threshold" : "50",
				"Period" : "60",
				"EvaluationPeriods" : "3",
				"AlarmActions" : [ { "Ref" : "ScaleUpPolicy" } ]
			}
		},
		"CPUAlarmLow" : {
			"Type" : "AWS::CloudWatch::Alarm",
			"DependsOn": "WebServiceGroup",
			"Properties" : {
				"AlarmName" : { "Fn::Join" : ["", ["Ecomm-WebService-CPU-ScaleDown-", { "Ref" : "EnvironmentShort" }]]},
				"Dimensions" : [{ "Name" : "AutoScalingGroupName", "Value" : { "Ref" : "WebServiceGroup" }}],
				"AlarmDescription" : "Scale-down if Avg CPU < 30% for 3 minutes or 3-1 minute periods",
				"Namespace" : "AWS/EC2",
				"MetricName" : "CPUUtilization",
				"Statistic" : "Average",
				"ComparisonOperator" : "LessThanThreshold",
				"Threshold" : "30",
				"Period" : "60",
				"EvaluationPeriods" : "3",
				"AlarmActions" : [ { "Ref" : "ScaleDownPolicy" } ]
			}
		},
		"ScaleUpPolicy" : {
			"Type" : "AWS::AutoScaling::ScalingPolicy",
			"DependsOn": "WebServiceGroup",
			"Properties" : {
				"AdjustmentType" : "ChangeInCapacity",
				"AutoScalingGroupName" : { "Ref" : "WebServiceGroup" },
				"PolicyType" : "SimpleScaling",
				"Cooldown" : "60",
				"ScalingAdjustment" : "1"
			}
		},
		"ScaleDownPolicy" : {
			"Type" : "AWS::AutoScaling::ScalingPolicy",
			"DependsOn": "WebServiceGroup",
			"Properties" : {
				"AdjustmentType" : "ChangeInCapacity",
				"AutoScalingGroupName" : { "Ref" : "WebServiceGroup" },
				"PolicyType" : "SimpleScaling",
				"Cooldown" : "60",
				"ScalingAdjustment" : "-1"
			}
		},
		"WebServiceALB": {
			"Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
			"Properties": {
				"Name": { "Fn::Join" : ["", ["alb-ecomm-webservice-", { "Ref" : "EnvironmentShort" }]]},
				"Subnets": [{ "Ref" : "PvtSNa" },{ "Ref" : "PvtSNb" },{ "Ref" : "PvtSNc" }],
				"Scheme": "internal",
				"SecurityGroups": [ { "Ref": "SGELBs" } ],
				"Tags": [
					{ "Key" : "Name", "Value" : { "Fn::Join" : ["", ["Ecomm-Pricing-WebService-ALB-", { "Ref" : "EnvironmentShort" }]]}},
					{ "Key" : "Technical:ApplicationName", "Value" : { "Ref" : "ApplicationName" } },
					{ "Key" : "Technical:ApplicationID", "Value" : { "Ref" : "ApplicationID" } },
					{ "Key" : "Technical:PlatformOwner", "Value" : { "Ref" : "Owner" } },
					{ "Key" : "Technical:ApplicationSubName", "Value": "Ecommerce Pricing Web Service ALB" },
					{ "Key" : "Technical:Environment", "Value" : { "Ref" : "Environment" } },
					{ "Key" : "Technical:ApplicationRole", "Value" : "Load Balancer" },
					{ "Key" : "SupportEmail", "Value" : { "Ref" : "SupportEmail" } },
					{ "Key" : "Approver", "Value" : { "Ref" : "Approver" } },
					{ "Key" : "PO_Number", "Value" : { "Ref" : "PONumber" } },
					{ "Key" : "Project_ID", "Value" : { "Ref" : "ProjectID" } },
					{ "Key" : "2WTAGGER", "Value" : { "Ref" : "2WTAGGER" } },
					{ "Key" : "Platform", "Value" : { "Ref" : "Platform" } },
					{ "Key" : "Component", "Value": "Ecommerce Pricing Web Service ALB" }
				]
			}
		},
		"LoadBalancerListenerHTTP": {
			"Type": "AWS::ElasticLoadBalancingV2::Listener",
			"Properties": {
				"LoadBalancerArn":  { "Ref": "WebServiceALB" },
				"Port": "80",
				"Protocol": "HTTP",
				"DefaultActions": [
					{
						"Type": "forward",
						"TargetGroupArn": { "Ref": "TargetGroup" }
					}
				]
			}
		},
		"TargetGroup": {
			"Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
			"Properties": {
				"Name": { "Fn::Join" : ["", ["target-group-ecomm-", { "Ref" : "EnvironmentShort" }]]},
				"VpcId": { "Ref" : "VPCID" },
				"Port": "5000",
				"Protocol": "HTTP",
				"HealthCheckIntervalSeconds": "30",
				"HealthCheckPath": "/api/Values",
				"HealthCheckPort": "5000",
				"HealthCheckProtocol": "HTTP",
				"HealthCheckTimeoutSeconds": "15",
				"HealthyThresholdCount": "3",
				"TargetType": "instance",
				"Tags": [
					{ "Key" : "Name", "Value" : { "Fn::Join" : ["", ["Ecomm-Pricing-WebService-Target-Group", { "Ref" : "EnvironmentShort" }]]}},
					{ "Key" : "Technical:ApplicationName", "Value" : { "Ref" : "ApplicationName" } },
					{ "Key" : "Technical:ApplicationID", "Value" : { "Ref" : "ApplicationID" } },
					{ "Key" : "Technical:PlatformOwner", "Value" : { "Ref" : "Owner" } },
					{ "Key" : "Technical:Environment", "Value" : { "Ref" : "Environment" } },
					{ "Key" : "Technical:ApplicationSubName", "Value": "Ecommerce Pricing Web Service Target" },
					{ "Key" : "Technical:ApplicationRole", "Value" : "Target Group" },
					{ "Key" : "SupportEmail", "Value" : { "Ref" : "SupportEmail" } },
					{ "Key" : "Approver", "Value" : { "Ref" : "Approver" } },
					{ "Key" : "PO_Number", "Value" : { "Ref" : "PONumber" } },
					{ "Key" : "Project_ID", "Value" : { "Ref" : "ProjectID" } },
					{ "Key" : "2WTAGGER", "Value" : { "Ref" : "2WTAGGER" } },
					{ "Key" : "Platform", "Value" : { "Ref" : "Platform" } },
					{ "Key" : "Component", "Value": "Ecommerce Pricing Web Service Target" }
				]
			}
		},
		"S3BucketeComm": {
			"Type": "AWS::S3::Bucket",
			"Properties": {
				"BucketName": "sysco-us-east-1-prcp-prod-ecomm-pricing",
				"LifecycleConfiguration": {
					"Rules": [{
						"Id" : "Retention365Days",
						"ExpirationInDays" : 365,
						"Status": "Enabled"
					}]
				},
				"Tags" : [
					{ "Key" : "Name", "Value": "S3 Bucket for eComm Pricing" },
					{ "Key" : "Technical:ApplicationName", "Value" : { "Ref" : "ApplicationName" } },
					{ "Key" : "Technical:ApplicationID", "Value" : { "Ref" : "ApplicationID" } },
					{ "Key" : "Technical:PlatformOwner", "Value" : { "Ref" : "Owner" } },
					{ "Key" : "Technical:ApplicationSubName", "Value": "Ecommerce Pricing Web Service S3 bucket" },
					{ "Key" : "Technical:ApplicationRole", "Value" : "S3 bucket" },
					{ "Key" : "Technical:Environment", "Value" : { "Ref" : "Environment" } },
					{ "Key" : "SupportEmail", "Value" : { "Ref" : "SupportEmail" } },
					{ "Key" : "Approver", "Value" : { "Ref" : "Approver" } },
					{ "Key" : "PO_Number", "Value" : { "Ref" : "PONumber" } },
					{ "Key" : "Project_ID", "Value" : { "Ref" : "ProjectID" } },
					{ "Key" : "Platform", "Value" : { "Ref" : "Platform" } },
					{ "Key" : "2WTAGGER", "Value" : { "Ref" : "2WTAGGER" } }
				]
			},
			"Metadata" : {
				"Comment" : "S3 Bucket for Ecomm Data storing"
			}
		},
		"ECOMMDBCluster" : {
			"Type" : "AWS::RDS::DBCluster",
			"DeletionPolicy" : "Snapshot",
			"Properties" : {
				"DatabaseName" : "ECOMMDB_Common01",
				"DBClusterIdentifier" : "ecomm01dbcluster",
				"Engine" : "aurora",
				"MasterUsername" : { "Ref" : "DBUser"},
				"MasterUserPassword" : { "Ref" : "DBPassword"},
				"Port" : "3306",
				"VpcSecurityGroupIds" : [ { "Ref" : "SGRDSMySQL" }],
				"DBSubnetGroupName" : "rds-subnet-group",
				"Tags" : [
					{ "Key" : "Name", "Value" : { "Fn::Join" : ["", ["ECOMMDB-Cluster-", { "Ref" : "EnvironmentShort" }]]}},
					{ "Key" : "Technical:ApplicationName", "Value" : { "Ref" : "ApplicationName" } },
					{ "Key" : "Technical:ApplicationID", "Value" : { "Ref" : "ApplicationID" } },
					{ "Key" : "Technical:PlatformOwner", "Value" : { "Ref" : "Owner" } },
					{ "Key" : "Technical:ApplicationSubName", "Value": "Aurora DB" },
					{ "Key" : "Technical:ApplicationRole", "Value" : "Database" },
					{ "Key" : "Technical:Environment", "Value" : { "Ref" : "Environment" } },
					{ "Key" : "SupportEmail", "Value" : { "Ref" : "SupportEmail" } },
					{ "Key" : "Approver", "Value" : { "Ref" : "Approver" } },
					{ "Key" : "PO_Number", "Value" : { "Ref" : "PONumber" } },
					{ "Key" : "Project_ID", "Value" : { "Ref" : "ProjectID" } },
					{ "Key" : "2WTAGGER", "Value" : {"Ref" : "2WTAGGER"} },
					{ "Key" : "Platform", "Value" : { "Ref" : "Platform" } },
					{ "Key" : "Component", "Value": "Aurora DB" }
				]
			}
		},
		"DB0Primary01" : {
			"Type" : "AWS::RDS::DBInstance",
			"Properties" :  {
				"DBInstanceIdentifier" : { "Fn::Join" : [ "" ,[ "ECOMM01" , { "Ref" : "EnvironmentShort" }, "01" ]]},
				"AllowMajorVersionUpgrade" : "true",
				"AutoMinorVersionUpgrade" : "true",
				"CopyTagsToSnapshot" : "true",
				"DBClusterIdentifier" : { "Ref" : "ECOMMDBCluster" },
				"DBInstanceClass" : "db.r5.xlarge",
				"Engine" : "aurora",
				"DBSubnetGroupName" : "rds-subnet-group",
				"Tags" : [
					{ "Key" : "Name", "Value" : { "Fn::Join" : ["", ["ECOMM01-Database-01-", { "Ref" : "EnvironmentShort" }]]}},
					{ "Key" : "Technical:ApplicationName", "Value" : { "Ref" : "ApplicationName" } },
					{ "Key" : "Technical:ApplicationID", "Value" : { "Ref" : "ApplicationID" } },
					{ "Key" : "Technical:PlatformOwner", "Value" : { "Ref" : "Owner" } },
					{ "Key" : "Technical:ApplicationSubName", "Value": "Aurora DB" },
					{ "Key" : "Technical:ApplicationRole", "Value" : "Database" },
					{ "Key" : "Technical:Environment", "Value" : { "Ref" : "Environment" } },
					{ "Key" : "SupportEmail", "Value" : { "Ref" : "SupportEmail" } },
					{ "Key" : "Approver", "Value" : { "Ref" : "Approver" } },
					{ "Key" : "PO_Number", "Value" : { "Ref" : "PONumber" } },
					{ "Key" : "Project_ID", "Value" : { "Ref" : "ProjectID" } },
					{ "Key" : "2WTAGGER", "Value" : {"Ref" : "2WTAGGER"} },
					{ "Key" : "Platform", "Value" : { "Ref" : "Platform" } },
					{ "Key" : "Component", "Value": "Aurora DB" }
				]
			}
		},
		"DB0Primary02" : {
			"Type" : "AWS::RDS::DBInstance",
			"DependsOn": "DB0Primary01",
			"Properties" :  {
				"DBInstanceIdentifier" : { "Fn::Join" : [ "" ,[ "ECOMM01" , { "Ref" : "EnvironmentShort" }, "02" ]]},
				"AllowMajorVersionUpgrade" : "true",
				"AutoMinorVersionUpgrade" : "true",
				"CopyTagsToSnapshot" : "true",
				"DBClusterIdentifier" : { "Ref" : "ECOMMDBCluster" },
				"DBInstanceClass" : "db.r5.xlarge",
				"Engine" : "aurora",
				"DBSubnetGroupName" : "rds-subnet-group",
				"DBParameterGroupName":"ecomm-ro-param-group",
				"Tags" : [
					{ "Key" : "Name", "Value" : { "Fn::Join" : ["", ["ECOMM01-Database-02-", { "Ref" : "EnvironmentShort" }]]}},
					{ "Key" : "Technical:ApplicationName", "Value" : { "Ref" : "ApplicationName" } },
					{ "Key" : "Technical:ApplicationID", "Value" : { "Ref" : "ApplicationID" } },
					{ "Key" : "Technical:PlatformOwner", "Value" : { "Ref" : "Owner" } },
					{ "Key" : "Technical:ApplicationSubName", "Value": "Aurora DB" },
					{ "Key" : "Technical:ApplicationRole", "Value" : "Database" },
					{ "Key" : "Technical:Environment", "Value" : { "Ref" : "Environment" } },
					{ "Key" : "SupportEmail", "Value" : { "Ref" : "SupportEmail" } },
					{ "Key" : "Approver", "Value" : { "Ref" : "Approver" } },
					{ "Key" : "PO_Number", "Value" : { "Ref" : "PONumber" } },
					{ "Key" : "Project_ID", "Value" : { "Ref" : "ProjectID" } },
					{ "Key" : "2WTAGGER", "Value" : {"Ref" : "2WTAGGER"} },
					{ "Key" : "Platform", "Value" : { "Ref" : "Platform" } },
					{ "Key" : "Component", "Value": "Aurora DB" }
				]
			}
		},
		"CPWebCodeDeployApp": {
			"Type" : "AWS::CodeDeploy::Application",
			"Properties" : { "ApplicationName" : "Ecomm_Service" }
		},
		"CPCodeDeployGroup": {
			"Type" : "AWS::CodeDeploy::DeploymentGroup",
			"Properties" : {
				"ApplicationName" : "Ecomm_Service",
				"AutoScalingGroups" : [ { "Ref" : "WebServiceGroup" } ],
				"DeploymentConfigName" : "CodeDeployDefault.OneAtATime",
				"DeploymentGroupName" : { "Fn::Join" : ["", ["Ecomm_Service_", { "Ref" : "EnvironmentShort" }]]},
				"ServiceRoleArn": "arn:aws:iam::130227353653:role/CloudPricing-CodeDeploy-Role"
			}
		}
	}
}