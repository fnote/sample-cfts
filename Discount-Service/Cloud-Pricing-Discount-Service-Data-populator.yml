AWSTemplateFormatVersion: 2010-09-09
Description: "Discount Service Data Populator"
Parameters:
  DatabasePassword:
    Type: String
    Description: Password of the database used for glue connection
    Default: ""
    NoEcho: true
  AvailabilityZoneForGlueConnection:
    Type: String
    Description: The Availability Zone of the glue connection
    Default: us-east-1b
    AllowedValues:
      - us-east-1a
      - us-east-1b
      - us-east-1c
      - us-east-1d
      - us-east-1e
      - us-east-1f
  SecurityGroupListForGlueConnction:
    Type: CommaDelimitedList
    Description: Security group list for glue connection
    Default: sg-06a4893b70fc2f68f
  SubnetIdForGlueConnection:
    Type: String
    Description: The subnetId to be referred
    Default: subnet-0ad1216eb31e15186
  IntermediateStorage:
    Description: S3 bucket name to store intermediate files
    Type: String
    Default: cp-discounts-etl-output-bucket-dev
  EnvironmentShort:
    Description: Environment for application
    Type: String
    Default: DEV
    AllowedValues:
      - DEV
      - QA
      - STG
      - EXE
      - TST
      - PROD
    ConstraintDescription: Must be a valid environment
  NotifierLambdaSecutyGroup:
    Description: The list of Securty groups to use the Cloud Pricing Notification Service Api
    Type: List<AWS::EC2::SecurityGroup::Id>
    Default: sg-014f39d2fd8370bf6
  NotifierLambdaSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: The list of Subnets to use the Cloud Pricing Notification Service Api
    Default: subnet-0a5d9eea71b9c97c6, subnet-0186b43162a344d9a, subnet-0ad1216eb31e15186
  NotificationURL:
    Type: String
    Description: Cloud pricing Notification service URL
    Default: https://vpce-0ee878fea3ffd19c4-6bsoxvze.execute-api.us-east-1.vpce.amazonaws.com/stg/v1/cpns/notifications
  NotificationHost:
    Type: String
    Description: Cloud Pricing Notification service host
    Default: ivsgfq5vdl.execute-api.us-east-1.amazonaws.com
  PONumber:
    Description: PO Number for billing
    Type: String
    Default: '7000002358'
    MinLength: '1'
    MaxLength: '255'
    AllowedPattern: "[\\x20-\\x7E]*"
    ConstraintDescription: Must contain only ASCII characters.
  ApplicationID:
    Description: Application ID - Official Application_ID, this is generated by Sysco's
      CMDB
    Type: String
    Default: APP-001151
    MinLength: '1'
    MaxLength: '255'
    AllowedPattern: "[\\x20-\\x7E]*"
    ConstraintDescription: Must contain only ASCII characters.
  ApplicationName:
    Description: Application_Name - Common, user-friendly name
    Type: String
    Default: Cloud Pricing
    MinLength: '1'
    MaxLength: '255'
    AllowedPattern: "[\\x20-\\x7E]*"
    ConstraintDescription: Must contain only ASCII characters.
  Approver:
    Description: Person approving instance funding.  This should be Email address
      formatted
    Type: String
    Default: villanueva.loi@corp.sysco.com
    MinLength: '1'
    MaxLength: '255'
  Owner:
    Description: Email address usually Product/ Platform Owner, though team distribution
      list for technical product/platform team contact
    Type: String
    Default: krishan.senevirathne@sysco.com
    MinLength: '1'
    MaxLength: '255'
  Component:
    Description: Component name
    Type: String
    Default: Discount Service
  SupportEmail:
    Description: Email distribution list for technical product/platform team contact
    Type: String
    Default: 000-BT-PricingPlatform@Corp.sysco.com
    MinLength: '1'
    MaxLength: '255'
  ProjectID:
    Description: Project_ID - BT Project ID for this workload
    Type: String
    Default: BT.001176
    MinLength: '1'
    MaxLength: '255'
    AllowedPattern: "[\\x20-\\x7E]*"
    ConstraintDescription: Must contain only ASCII characters.
  2WTAGGER:
    Description: Used by 2nd Watch Managed Services in shared accounts to determine
      if a resource is supported
    Type: String
    Default: team-managed
    MinLength: '1'
    MaxLength: '255'
    AllowedValues:
      - team-managed
      - adlm-managed
      - 2w-managed
    ConstraintDescription: Must contain only ASCII characters.
  Platform:
    Description: Platform
    Type: String
    Default: Cloud Pricing V4

Mappings:
  EnvMap:
    DEV:
      val: dev
      name: Development
    QA:
      val: qa
      name: Quality
    STG:
      val: stg
      name: Staging
    EXE:
      val: exe
      name: Execution
    TST:
      val: tst
      name: Tuning
    PROD:
      val: prod
      name: Production

Resources:
  MDTDataStorage:
    DependsOn: MDTLambdaInvokePermission
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub
        - 'cp-discounts-etl-mdt-data-storage-${env}'
        - { env: !FindInMap [ EnvMap, !Ref EnvironmentShort, val ]}
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt DiscountsInputTriggerLambda.Arn
      Tags:
        - Key: Technical:ApplicationName
          Value: !Ref ApplicationName
        - Key: Technical:ApplicationID
          Value: !Ref ApplicationID
        - Key: Technical:PlatformOwner
          Value: !Ref Owner
        - Key: Technical:Environment
          Value: !FindInMap [ EnvMap, !Ref EnvironmentShort, name ]
        - Key: Support_Email
          Value: !Ref SupportEmail
        - Key: Approver
          Value: !Ref Approver
        - Key: PO_Number
          Value: !Ref PONumber
        - Key: Project_ID
          Value: !Ref ProjectID
        - Key: 2WTAGGER
          Value: !Ref 2WTAGGER
        - Key: Platform
          Value: !Ref Platform
        - Key: Component
          Value: !Ref Component

  CustomerEligibilityDataStorage:
    DependsOn: MDTLambdaInvokePermission
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub
        - 'cp-discounts-etl-customer-eligibility-data-storage-${env}'
        - { env: !FindInMap [ EnvMap, !Ref EnvironmentShort, val ]}
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt DiscountsInputTriggerLambda.Arn
      Tags:
        - Key: Technical:ApplicationName
          Value: !Ref ApplicationName
        - Key: Technical:ApplicationID
          Value: !Ref ApplicationID
        - Key: Technical:PlatformOwner
          Value: !Ref Owner
        - Key: Technical:Environment
          Value: !FindInMap [ EnvMap, !Ref EnvironmentShort, name ]
        - Key: Support_Email
          Value: !Ref SupportEmail
        - Key: Approver
          Value: !Ref Approver
        - Key: PO_Number
          Value: !Ref PONumber
        - Key: Project_ID
          Value: !Ref ProjectID
        - Key: 2WTAGGER
          Value: !Ref 2WTAGGER
        - Key: Platform
          Value: !Ref Platform
        - Key: Component
          Value: !Ref Component

  CELambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt DiscountsInputTriggerLambda.Arn
      Principal: s3.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: !Sub
        - 'arn:aws:s3:::cp-discounts-etl-customer-eligibility-data-storage-${env}'
        - { env: !FindInMap [ EnvMap, !Ref EnvironmentShort, val ]}

  MDTLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt DiscountsInputTriggerLambda.Arn
      Principal: s3.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: !Sub
        - 'arn:aws:s3:::cp-discounts-etl-mdt-data-storage-${env}'
        - { env: !FindInMap [ EnvMap, !Ref EnvironmentShort, val ]}

  DiscountsInputTriggerLambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: Lambda function that listens to pa data file uploads and triggers the step function
      FunctionName: !Sub 'CP-DISCOUNTS-etl-trigger-${EnvironmentShort}'
      Runtime: python3.7
      Role: !GetAtt ETLTriggerLambaRole.Arn
      Handler: TriggerLambda.lambda_handler
      Code:
        S3Bucket: sysco-us-east-1-prcp-nonprod-codedeploy
        S3Key: !Sub 'DiscountService/${EnvironmentShort}/TriggerLambda.py.zip'
      Timeout: 180
      Environment:
        Variables:
          stepFunctionArn: !Ref DiscountsStateMachine
          env: !Ref EnvironmentShort
      Tags:
        - Key: Technical:ApplicationName
          Value: !Ref ApplicationName
        - Key: Technical:ApplicationID
          Value: !Ref ApplicationID
        - Key: Technical:PlatformOwner
          Value: !Ref Owner
        - Key: Technical:Environment
          Value: !FindInMap [ EnvMap, !Ref EnvironmentShort, name ]
        - Key: Support_Email
          Value: !Ref SupportEmail
        - Key: Approver
          Value: !Ref Approver
        - Key: PO_Number
          Value: !Ref PONumber
        - Key: Project_ID
          Value: !Ref ProjectID
        - Key: 2WTAGGER
          Value: !Ref 2WTAGGER
        - Key: Platform
          Value: !Ref Platform
        - Key: Component
          Value: !Ref Component

  CommonDatabaseConnection:
    Type: AWS::Glue::Connection
    Properties:
      CatalogId: !Ref AWS::AccountId
      ConnectionInput:
        ConnectionProperties: {
          "JDBC_CONNECTION_URL": !Join ['', ["{{resolve:ssm:/CP/DISCOUNT_SERVICE/", !Ref EnvironmentShort, "/DISCOUNT/DB/ENDPOINT/WRITER:1}}"]],
          "USERNAME": !Join ['', ["{{resolve:ssm:/CP/DISCOUNT_SERVICE/", !Ref EnvironmentShort, "/DISCOUNT/DB/USERNAME:1}}"]],
          # SSM Secure reference is not supported in: [AWS::glue::Connection]
          "PASSWORD": !Ref DatabasePassword
        }
        Description: Glue Connection to Referrence pricing database
        ConnectionType: JDBC
        Name: !Sub 'cp-DISCOUNTS-etl-connection-${EnvironmentShort}'
        PhysicalConnectionRequirements:
          AvailabilityZone: !Ref AvailabilityZoneForGlueConnection
          SecurityGroupIdList: !Ref SecurityGroupListForGlueConnction
          SubnetId: !Ref SubnetIdForGlueConnection

  CustomerEligibilityDataLoadJob:
    Type: AWS::Glue::Job
    Properties:
      Command:
        Name: pythonshell
        PythonVersion: 3
        ScriptLocation: !Sub "s3://sysco-us-east-1-prcp-nonprod-codedeploy/DiscountService/${EnvironmentShort}/customer_eligibility.py"
      Connections:
        Connections:
          - !Ref CommonDatabaseConnection
      DefaultArguments:
        "--job-bookmark-option": "job-bookmark-disable"
        "--extra-py-files": "s3://sysco-us-east-1-prcp-nonprod-codedeploy/DiscountService/libraries/PyMySQL-0.9.3-py2.py3-none-any.whl"
        "--GLUE_CONNECTION_NAME": !Ref CommonDatabaseConnection
        "--INTERMEDIATE_S3_BUCKET": !Ref IntermediateStorage
        "--ENV": !Ref EnvironmentShort
        "--METADATA_LAMBDA": !Sub 'CP-DISCOUNTS-etl-metadata-aggregator-${EnvironmentShort}'
      ExecutionProperty:
        MaxConcurrentRuns: 1
      GlueVersion: 1.0
      MaxRetries: 0
      MaxCapacity: 1.0
      Timeout: 4320
      Name: !Sub 'CP-DISCOUNTS-etl-customer-eligibility-load-job-${EnvironmentShort}'
      Role: !Ref ETLGlueRole
      Tags: {
        'Technical:ApplicationName': !Ref ApplicationName,
        'Technical:ApplicationID': !Ref ApplicationID,
        'Technical:PlatformOwner': !Ref Owner,
        'Technical:Environment': !FindInMap [ EnvMap, !Ref EnvironmentShort, name ],
        'Support_Email': !Ref SupportEmail,
        'Approver': !Ref Approver,
        'PO_Number': !Ref PONumber,
        'Project_ID': !Ref ProjectID,
        '2WTAGGER': !Ref 2WTAGGER,
        'Platform': !Ref Platform,
        'Component': !Ref Component
      }

  MasterDiscountTableDataLoadJob:
    Type: AWS::Glue::Job
    Properties:
      Command:
        Name: pythonshell
        PythonVersion: 3
        ScriptLocation: !Sub "s3://sysco-us-east-1-prcp-nonprod-codedeploy/DiscountService/${EnvironmentShort}/mdt.py"
      Connections:
        Connections:
          - !Ref CommonDatabaseConnection
      DefaultArguments:
        "--job-bookmark-option": "job-bookmark-disable"
        "--extra-py-files": !Sub "s3://sysco-us-east-1-prcp-nonprod-codedeploy/DiscountService/libraries/PyMySQL-0.9.3-py2.py3-none-any.whl,s3://sysco-us-east-1-prcp-nonprod-codedeploy/DiscountService/libraries/jsonschema-3.2.0-py2.py3-none-any.whl,s3://sysco-us-east-1-prcp-nonprod-codedeploy/DiscountService/libraries/smart_open-2.1.0-py3.6.egg,s3://sysco-us-east-1-prcp-nonprod-codedeploy/DiscountService/${EnvironmentShort}/validator.py,s3://sysco-us-east-1-prcp-nonprod-codedeploy/DiscountService/${EnvironmentShort}/constants.py,s3://sysco-us-east-1-prcp-nonprod-codedeploy/DiscountService/libraries/pyspark-2.4.3-py3-none-any.whl,s3://sysco-us-east-1-prcp-nonprod-codedeploy/DiscountService/libraries/py4j-0.10.7-py3-none-any.whl"
        "--GLUE_CONNECTION_NAME": !Ref CommonDatabaseConnection
        "--INTERMEDIATE_S3_BUCKET": !Ref IntermediateStorage
        "--ENV": !Ref EnvironmentShort
        "--METADATA_LAMBDA": !Sub 'CP-DISCOUNTS-etl-metadata-aggregator-${EnvironmentShort}'
      ExecutionProperty:
        MaxConcurrentRuns: 1
      GlueVersion: 1.0
      MaxRetries: 0
      MaxCapacity: 1.0
      Timeout: 4320
      Name: !Sub 'CP-DISCOUNTS-etl-mdt-load-job-${EnvironmentShort}'
      Role: !Ref ETLGlueRole
      Tags: {
        'Technical:ApplicationName': !Ref ApplicationName,
        'Technical:ApplicationID': !Ref ApplicationID,
        'Technical:PlatformOwner': !Ref Owner,
        'Technical:Environment': !FindInMap [ EnvMap, !Ref EnvironmentShort, name ],
        'Support_Email': !Ref SupportEmail,
        'Approver': !Ref Approver,
        'PO_Number': !Ref PONumber,
        'Project_ID': !Ref ProjectID,
        '2WTAGGER': !Ref 2WTAGGER,
        'Platform': !Ref Platform,
        'Component': !Ref Component
      }

  DiscountsStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: !Sub 'CP-DISCOUNTS-state-machine-${EnvironmentShort}'
      StateMachineType: STANDARD
      DefinitionString: !Sub
        - |-
          {
            "Comment": "Transform and Loads PA data from S3 to DB",
            "StartAt": "ChoiceState",
            "States": {
              "ChoiceState": {
                "Type": "Choice",
                "Choices": [
                  {
                    "Variable": "$.s3_bucket",
                    "StringMatches": "cp-discounts-etl-mdt-data-storage*",
                    "Next": "MDT ETL Job"
                  }
                ],
                "Default": "CE Decompress Job"
              },
              "MDT ETL Job": {
                "Type": "Task",
                "Resource": "arn:aws:states:::glue:startJobRun.sync",
                "Parameters": {
                  "JobName": "${MasterDiscountTableDataLoadJob}",
                  "Arguments": {
                    "--s3_file_path.$": "$.s3_file_path",
                    "--etl_timestamp.$": "$.etl_timestamp",
                    "--active_opcos.$": "$.active_opcos"
                  }
                },
                "Catch": [
                  {
                    "ErrorEquals": [
                      "States.TaskFailed"
                    ],
                    "ResultPath": "$.error",
                    "Next": "Notify ETL Failure"
                  }
                ],
                "ResultPath": "$.loadJob",
                "Next": "Clean and backup Job"
              },
              "CE Decompress Job": {
                "Type": "Task",
                "Resource": "arn:aws:states:::glue:startJobRun.sync",
                "Parameters": {
                  "JobName": "${CustomerEligibilityDecompressionJob}",
                  "Arguments": {
                    "--s3_file_path.$": "$.s3_file_path",
                    "--etl_timestamp.$": "$.etl_timestamp"
                  }
                },
                "Catch": [
                  {
                    "ErrorEquals": [
                      "States.TaskFailed"
                    ],
                    "ResultPath": "$.error",
                    "Next": "Notify ETL Failure"
                  }
                ],
                "ResultPath": "$.loadJob",
                "Next": "CE Partition Job"
              },
              "CE Partition Job": {
                "Type": "Task",
                "Resource": "arn:aws:states:::glue:startJobRun.sync",
                "Parameters": {
                  "JobName": "${CustomerEligibilityPartitionJob}",
                  "Arguments": {
                    "--s3_file_path.$": "$.s3_file_path",
                    "--etl_timestamp.$": "$.etl_timestamp",
                    "--active_opcos.$": "$.active_opcos"
                  }
                },
                "Catch": [
                  {
                    "ErrorEquals": [
                      "States.TaskFailed"
                    ],
                    "ResultPath": "$.error",
                    "Next": "Notify ETL Failure"
                  }
                ],
                "ResultPath": "$.loadJob",
                "Next": "CE ETL Job"
              },
              "CE ETL Job": {
                "Type": "Task",
                "Resource": "arn:aws:states:::glue:startJobRun.sync",
                "Parameters": {
                  "JobName": "${CustomerEligibilityDataLoadJob}",
                  "Arguments": {
                    "--s3_file_path.$": "$.s3_file_path",
                    "--etl_timestamp.$": "$.etl_timestamp",
                    "--active_opcos.$": "$.active_opcos"
                  }
                },
                "Catch": [
                  {
                    "ErrorEquals": [
                      "States.TaskFailed"
                    ],
                    "ResultPath": "$.error",
                    "Next": "Notify ETL Failure"
                  }
                ],
                "ResultPath": "$.loadJob",
                "Next": "Clean and backup Job"
              },
              "Clean and backup Job": {
                "Type": "Task",
                "Resource": "arn:aws:states:::glue:startJobRun.sync",
                "Parameters": {
                  "JobName": "${DiscountDataBackupJob}",
                  "Arguments": {
                    "--s3_file_path.$": "$.s3_file_path",
                    "--s3_bucket.$": "$.s3_bucket",
                    "--s3_object_key.$": "$.s3_object_key",
                    "--etl_timestamp.$": "$.etl_timestamp",
                    "--backup_file_path.$": "$.backup_file_path"
                  }
                },
                "Catch": [
                  {
                    "ErrorEquals": [
                      "States.TaskFailed"
                    ],
                    "ResultPath": "$.error",
                    "Next": "Notify ETL Failure"
                  }
                ],
                "ResultPath": "$.backupJob",
                "Next": "Notify ETL Success"
              },
              "Notify ETL Failure": {
                "Type": "Task",
                "Resource": "arn:aws:states:::lambda:invoke",
                "Parameters": {
                  "FunctionName": "${notifierLambdaArn}",
                  "Payload": {
                    "event": "ETL-Discount Service",
                    "message.$": "States.Format('S3 Path: {}, ETL timestamp: {}, Execution Id: {}, Error: {}', $.s3_file_path, $.etl_timestamp, $$.Execution.Id, $.error.Cause)"
                  }
                },
                "End": true
              },
              "Notify ETL Success": {
                "Type": "Task",
                "Resource": "arn:aws:states:::lambda:invoke",
                "Parameters": {
                  "FunctionName": "${notifierLambdaArn}",
                  "Payload": {
                    "event": "[ETL] - [Discount Service]",
                    "etlTimestamp.$":"$.etl_timestamp",
                    "message.$": "States.Format('S3 Path: {}, ETL timestamp: {}, Execution Id: {}', $.s3_file_path, $.etl_timestamp, $$.Execution.Id)",
                    "status": "SUCCEEDED"
                  }
                },
                "End": true
              }
            }
          }
        - {
          MasterDiscountTableDataLoadJob: !Ref MasterDiscountTableDataLoadJob,
          notifierLambdaArn: !GetAtt NotifierLambda.Arn,
          CustomerEligibilityDataLoadJob: !Ref CustomerEligibilityDataLoadJob,
          DiscountDataBackupJob: !Ref DiscountDataBackupJob,
          CustomerEligibilityDecompressionJob: !Ref CustomerEligibilityDecompressionJob,
          CustomerEligibilityPartitionJob: !Ref CustomerEligibilityPartitionJob
        }
      LoggingConfiguration:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt PAStepFunctionExecutionLogs.Arn
        IncludeExecutionData: TRUE
        Level: ALL
      RoleArn: !GetAtt ETLStepFunctionExecutionRole.Arn
      Tags:
        - Key: Technical:ApplicationName
          Value: !Ref ApplicationName
        - Key: Technical:ApplicationID
          Value: !Ref ApplicationID
        - Key: Technical:PlatformOwner
          Value: !Ref Owner
        - Key: Technical:Environment
          Value: !FindInMap [ EnvMap, !Ref EnvironmentShort, name ]
        - Key: Support_Email
          Value: !Ref SupportEmail
        - Key: Approver
          Value: !Ref Approver
        - Key: PO_Number
          Value: !Ref PONumber
        - Key: Project_ID
          Value: !Ref ProjectID
        - Key: 2WTAGGER
          Value: !Ref 2WTAGGER
        - Key: Platform
          Value: !Ref Platform
        - Key: Component
          Value: !Ref Component

  PAStepFunctionExecutionLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub 'cp-discounts-etl-mdt-step-function-logs-${EnvironmentShort}'
      RetentionInDays: 30

  ETLGlueRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'CP-DISCOUNTS-ETLGlueRole-${EnvironmentShort}'
      PermissionsBoundary: !Sub 'arn:aws:iam::${AWS::AccountId}:policy/PermissionBoundary-DevOps'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - 'glue.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
        - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/CloudPricing-IAM-SSM-Policy'
      Policies:
        - PolicyName: CP-REF-ETLGlueJobPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                  - logs:PutLogEvents
                  - logs:AssociateKmsKey
                Resource: 'arn:aws:logs:*:*:/aws-glue/*'
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - 'arn:aws:s3:::sysco-us-east-1-prcp-nonprod-codedeploy/DiscountService/*'
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Sub 'arn:aws:s3:::${IntermediateStorage}/*'
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Sub 'arn:aws:s3:::${IntermediateStorage}'
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Sub
                  - 'arn:aws:s3:::cp-discounts-etl-mdt-data-storage-${env}/*'
                  - { env: !FindInMap [ EnvMap, !Ref EnvironmentShort, val ]}
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Sub
                  - 'arn:aws:s3:::cp-discounts-etl-customer-eligibility-data-storage-${env}/*'
                  - { env: !FindInMap [ EnvMap, !Ref EnvironmentShort, val ]}
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: !Sub
                  - 'arn:aws:s3:::cp-ref-etl-prize-zone-spark-temp-dir-${env}/*'
                  - { env: !FindInMap [ EnvMap, !Ref EnvironmentShort, val ]}
      Path: '/'

  DiscountDataBackupJob:
    Type: AWS::Glue::Job
    Properties:
      Command:
        Name: pythonshell
        PythonVersion: 3
        ScriptLocation: !Sub 's3://sysco-us-east-1-prcp-nonprod-codedeploy/DiscountService/${EnvironmentShort}/data_backup_job.py'
      DefaultArguments:
        "--INTERMEDIATE_S3_BUCKET": !Ref IntermediateStorage
        "--ARCHIVING_S3_BUCKET": !Ref ETLDataBackUpStorage
      ExecutionProperty:
        MaxConcurrentRuns: 2
      GlueVersion: 1.0
      MaxRetries: 0
      MaxCapacity: 1.0
      Name: !Sub 'CP-DISCOUNTS-etl-backup-job-${EnvironmentShort}'
      Role: !Ref ETLDataBackUpGlueRole
      Tags: {
        'Technical:ApplicationName': !Ref ApplicationName,
        'Technical:ApplicationID': !Ref ApplicationID,
        'Technical:PlatformOwner': !Ref Owner,
        'Technical:Environment': !FindInMap [ EnvMap, !Ref EnvironmentShort, name ],
        'Support_Email': !Ref SupportEmail,
        'Approver': !Ref Approver,
        'PO_Number': !Ref PONumber,
        'Project_ID': !Ref ProjectID,
        '2WTAGGER': !Ref 2WTAGGER,
        'Platform': !Ref Platform,
        'Component': !Ref Component
      }

  ETLDataBackUpGlueRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'CP-DISCOUNTS-ETLDataBackupGlueRole-${EnvironmentShort}'
      PermissionsBoundary: !Sub 'arn:aws:iam::${AWS::AccountId}:policy/PermissionBoundary-DevOps'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - 'glue.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
      Policies:
        - PolicyName: CP-DISCOUNTS-ETLDataBackupGlueJobPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                  - logs:PutLogEvents
                  - logs:AssociateKmsKey
                Resource: 'arn:aws:logs:*:*:/aws-glue/*'
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - 'arn:aws:s3:::sysco-us-east-1-prcp-nonprod-codedeploy/DiscountService/*'
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:DeleteObject
                  - s3:PutObject
                Resource:
                  - !Sub 'arn:aws:s3:::${IntermediateStorage}/*'
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:DeleteObject
                Resource: !Sub
                  - 'arn:aws:s3:::cp-discounts-etl-mdt-data-storage-${env}/*'
                  - { env: !FindInMap [ EnvMap, !Ref EnvironmentShort, val ]}
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:DeleteObject
                Resource: !Sub
                  - 'arn:aws:s3:::cp-discounts-etl-customer-eligibility-data-storage-${env}/*'
                  - { env: !FindInMap [ EnvMap, !Ref EnvironmentShort, val ]}
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Sub 'arn:aws:s3:::${ETLDataBackUpStorage}/*'
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Sub 'arn:aws:s3:::${ETLDataBackUpStorage}'
      Path: '/'

  ETLDataBackUpStorage:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub
        - 'cp-discounts-etl-data-backup-storage-${env}'
        - { env: !FindInMap [ EnvMap, !Ref EnvironmentShort, val ]}
      LifecycleConfiguration:
        Rules:
          - Transitions:
              - StorageClass: GLACIER
                TransitionInDays: 30
            Id: Transition-To-Glacier-Rule
            Status: Enabled
      Tags:
        - Key: Technical:ApplicationName
          Value: !Ref ApplicationName
        - Key: Technical:ApplicationID
          Value: !Ref ApplicationID
        - Key: Technical:PlatformOwner
          Value: !Ref Owner
        - Key: Technical:Environment
          Value: !FindInMap [ EnvMap, !Ref EnvironmentShort, name ]
        - Key: Support_Email
          Value: !Ref SupportEmail
        - Key: Approver
          Value: !Ref Approver
        - Key: PO_Number
          Value: !Ref PONumber
        - Key: Project_ID
          Value: !Ref ProjectID
        - Key: 2WTAGGER
          Value: !Ref 2WTAGGER
        - Key: Platform
          Value: !Ref Platform
        - Key: Component
          Value: !Ref Component

  ETLTriggerLambaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'CP-DISCOUNTS-ETLTriggerLambdaRole-${EnvironmentShort}'
      PermissionsBoundary: !Sub 'arn:aws:iam::${AWS::AccountId}:policy/PermissionBoundary-DevOps'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: CP-REF-StartStepFunctionExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - states:StartExecution
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                  - ec2:DescribeInstances
                  - ec2:AttachNetworkInterface
                  - ssm:GetParameters
                  - ssm:GetParameter
                Resource:
                  - '*'
        - PolicyName: cp-discounts-etl-s3-read-policy
          PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - s3:GetObject
                    - s3:ListBucket
                    - s3:GetObjectVersion
                    - s3:DeleteObject
                    - s3:PutObject
                  Resource:
                    - !Sub 'arn:aws:s3:::${ETLDataBackUpStorage}/*'
                    - !Sub 'arn:aws:s3:::${IntermediateStorage}/*'
      Path: '/'


  NotifierLambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: Lambda function that use CPNS to notify
      FunctionName: !Sub 'CP-DISCOUNTS-etl-notifier-${EnvironmentShort}'
      Runtime: python3.8
      Role: !GetAtt ETLTriggerLambaRole.Arn
      Handler: index.lambda_handler
      Code:
        S3Bucket: sysco-us-east-1-prcp-nonprod-codedeploy
        S3Key: !Sub 'DiscountService/${EnvironmentShort}/Notifier.zip'
      VpcConfig:
        SecurityGroupIds:
          !Ref NotifierLambdaSecutyGroup
        SubnetIds:
          !Ref NotifierLambdaSubnets
      Environment:
        Variables:
          env: !Ref EnvironmentShort
          cp_notification_url: !Ref NotificationURL
          cp_notification_host: !Ref NotificationHost
      Timeout: 60
      Tags:
        - Key: Technical:ApplicationName
          Value: !Ref ApplicationName
        - Key: Technical:ApplicationID
          Value: !Ref ApplicationID
        - Key: Technical:PlatformOwner
          Value: !Ref Owner
        - Key: Technical:Environment
          Value: !FindInMap [ EnvMap, !Ref EnvironmentShort, name ]
        - Key: Support_Email
          Value: !Ref SupportEmail
        - Key: Approver
          Value: !Ref Approver
        - Key: PO_Number
          Value: !Ref PONumber
        - Key: Project_ID
          Value: !Ref ProjectID
        - Key: 2WTAGGER
          Value: !Ref 2WTAGGER
        - Key: Platform
          Value: !Ref Platform
        - Key: Component
          Value: !Ref Component

  MetadataAggregatorLambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: Lambda function that collects metadata
      FunctionName: !Sub 'CP-DISCOUNTS-etl-metadata-aggregator-${EnvironmentShort}'
      Runtime: python3.8
      Role: !GetAtt ETLTriggerLambaRole.Arn
      Handler: metadata_aggregator.lambda_handler
      Code:
        S3Bucket: sysco-us-east-1-prcp-nonprod-codedeploy
        S3Key: !Sub 'DiscountService/${EnvironmentShort}/metadata_aggregator.py.zip'
      VpcConfig:
        SecurityGroupIds:
          !Ref NotifierLambdaSecutyGroup
        SubnetIds:
          !Ref NotifierLambdaSubnets
      Environment:
        Variables:
          env: !Ref EnvironmentShort
      Timeout: 60
      Tags:
        - Key: Technical:ApplicationName
          Value: !Ref ApplicationName
        - Key: Technical:ApplicationID
          Value: !Ref ApplicationID
        - Key: Technical:PlatformOwner
          Value: !Ref Owner
        - Key: Technical:Environment
          Value: !FindInMap [ EnvMap, !Ref EnvironmentShort, name ]
        - Key: Support_Email
          Value: !Ref SupportEmail
        - Key: Approver
          Value: !Ref Approver
        - Key: PO_Number
          Value: !Ref PONumber
        - Key: Project_ID
          Value: !Ref ProjectID
        - Key: 2WTAGGER
          Value: !Ref 2WTAGGER
        - Key: Platform
          Value: !Ref Platform
        - Key: Component
          Value: !Ref Component

  ETLStepFunctionExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub 'CP-DISCOUNTS-ETLStepFunctionExecutionRole-${EnvironmentShort}'
      PermissionsBoundary: !Sub 'arn:aws:iam::${AWS::AccountId}:policy/PermissionBoundary-DevOps'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service:
                - !Sub 'states.${AWS::Region}.amazonaws.com'
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
      Policies:
        - PolicyName: CP-REF-ExecuteGlueJobPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - glue:GetJobs
                  - glue:BatchStopJobRun
                  - glue:ListJobs
                  - glue:CreateJob
                  - glue:BatchGetJobs
                  - glue:StartJobRun
                  - glue:GetJobRun
                  - glue:UpdateJob
                  - glue:GetJobRuns
                  - glue:GetJob
                Resource: "*"
        - PolicyName: LogStepFunctionEventPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:DescribeDestinations
                  - logs:PutDestination
                  - logs:CreateLogDelivery
                  - logs:GetLogDelivery
                  - logs:UpdateLogDelivery
                  - logs:DeleteLogDelivery
                  - logs:ListLogDeliveries
                  - logs:PutResourcePolicy
                  - logs:DescribeResourcePolicies
                  - logs:DescribeLogGroups
                Resource: '*'
      Path: '/'

  CustomerEligibilityDecompressionJob:
    Type: AWS::Glue::Job
    Properties:
      Command:
        Name: pythonshell
        PythonVersion: 3
        ScriptLocation: !Sub 's3://sysco-us-east-1-prcp-nonprod-codedeploy/DiscountService/${EnvironmentShort}/decompress_job.py'
      DefaultArguments:
        "--job-bookmark-option": "job-bookmark-disable"
        "--extra-py-files": !Sub "s3://sysco-us-east-1-prcp-nonprod-codedeploy/DiscountService/libraries/smart_open-2.1.0-py3.6.egg"
        "--INTERMEDIATE_S3_BUCKET": !Ref IntermediateStorage
      ExecutionProperty:
        MaxConcurrentRuns: 1
      GlueVersion: 1.0
      MaxRetries: 0
      MaxCapacity: 1.0
      Timeout: 4320
      Name: !Sub 'CP-DISCOUNTS-etl-customer-eligibility-decompress-job-${EnvironmentShort}'
      Role: !Ref ETLGlueRole
      Tags: {
        'Technical:ApplicationName': !Ref ApplicationName,
        'Technical:ApplicationID': !Ref ApplicationID,
        'Technical:PlatformOwner': !Ref Owner,
        'Technical:Environment': !FindInMap [ EnvMap, !Ref EnvironmentShort, name ],
        'Support_Email': !Ref SupportEmail,
        'Approver': !Ref Approver,
        'PO_Number': !Ref PONumber,
        'Project_ID': !Ref ProjectID,
        '2WTAGGER': !Ref 2WTAGGER,
        'Platform': !Ref Platform,
        'Component': !Ref Component
      }

  CustomerEligibilityPartitionJob:
    Type: AWS::Glue::Job
    Properties:
      Command:
        Name: glueetl
        PythonVersion: 3
        ScriptLocation: !Sub 's3://sysco-us-east-1-prcp-nonprod-codedeploy/DiscountService/${EnvironmentShort}/customer_eligibility_partitioner.py'
      DefaultArguments:
        "--enable-metrics": ""
        "--enable-continuous-cloudwatch-log": "true"
        "--enable-continuous-log-filter": "true"
        "--enable-spark-ui": 'true'
        "--INTERMEDIATE_S3_BUCKET": !Ref IntermediateStorage
        "--ENV": !Ref EnvironmentShort
        "--METADATA_LAMBDA": !Sub 'CP-DISCOUNTS-etl-metadata-aggregator-${EnvironmentShort}'
        "--extra-py-files": !Sub "s3://sysco-us-east-1-prcp-nonprod-codedeploy/DiscountService/${EnvironmentShort}/validator.py,s3://sysco-us-east-1-prcp-nonprod-codedeploy/DiscountService/${EnvironmentShort}/constants.py"
      ExecutionProperty:
        MaxConcurrentRuns: 1
      GlueVersion: 2.0
      MaxRetries: 0
      Name: !Sub 'CP-DISCOUNTS-etl-customer-eligibility-partition-job-${EnvironmentShort}'
      Role: !Ref ETLGlueRole
      Tags: {
        'Technical:ApplicationName': !Ref ApplicationName,
        'Technical:ApplicationID': !Ref ApplicationID,
        'Technical:PlatformOwner': !Ref Owner,
        'Technical:Environment': !FindInMap [ EnvMap, !Ref EnvironmentShort, name ],
        'Support_Email': !Ref SupportEmail,
        'Approver': !Ref Approver,
        'PO_Number': !Ref PONumber,
        'Project_ID': !Ref ProjectID,
        '2WTAGGER': !Ref 2WTAGGER,
        'Platform': !Ref Platform,
        'Component': !Ref Component
      }
