{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Deployed via Cloud-Pricing-Refactored-WebService-DEV | EXE | STG",
	"Parameters": {
		"PONumber": {
			"Description": "PO Number for billing",
			"Type": "String",
			"Default": "7000002358",
			"MinLength": "1",
			"MaxLength": "255",
			"AllowedPattern": "[\\x20-\\x7E]*",
			"ConstraintDescription": "Must contain only ASCII characters."
		},
		"PvtSNa": {
			"Description": "Private PRCP-NP Confidential Subnet 1 in us-east-1a CIDR: 10.133.103.0/24",
			"Type": "String",
			"Default": "subnet-0186b43162a344d9a"
		},
		"PvtSNb": {
			"Description": "Private PRCP-NP Confidential Subnet 2 in us-east-1b CIDR: 10.133.105.0/24",
			"Type": "String",
			"Default": "subnet-0ad1216eb31e15186"
		},
		"PvtSNc": {
			"Description": "Private PRCP-NP Confidential Subnet 3 in us-east-1c CIDR: 10.133.106.0/24",
			"Type": "String",
			"Default": "subnet-0a5d9eea71b9c97c6"
		},
		"VPCID": {
			"Description": "Name of and existing VPC",
			"Type": "String",
			"Default": "vpc-091c7e3e5578d7a4f"
		},
		"DNSSG": {
			"Description": "PRCP-NP-DNS-DNSSG-3J5600OVNNBR",
			"Type": "String",
			"Default": "sg-078061ddab53c5c41"
		},
		"SGRDSMySQL": {
			"Description": "SG-RDSMySQL",
			"Type": "String",
			"Default": "sg-039f822d40c446322"
		},
		"SGWebServices": {
			"Description": "SG-WebServices",
			"Type": "String",
			"Default": "sg-0a56447308e39b902"
		},
		"SGELBs": {
			"Description": "SG-ELBs",
			"Type": "String",
			"Default": "sg-014f39d2fd8370bf6"
		},
		"PemKey": {
			"Description": "Name of and existing EC2 KeyPair to enable SSH access to the instance",
			"Type": "String",
			"Default": "KeyPair-Sysco-CloudPricing-NonProd"
		},
		"CommonAMI": {
			"Description" : "Latest Sysco Gold Team Managed Amazon Linux 2 AMI",
			"Type": "String",
			"Default" : "ami-043a196cce124727a",
			"AllowedPattern" : "^ami-[0-9a-fA-F]{17}",
			"ConstraintDescription" : "Must be a valid AMI."
		},
		"InstanceProfile": {
			"Description" : "Instance Profile Name",
			"Type" : "String",
			"Default" : "Cloud-Pricing-Web-Service-Instance-Profile"
		},
		"SSLCertificate": {
			"Description": "The SSL acertificate ARN",
			"Type": "String",
			"ConstraintDescription": "must be a valid SSL ARN",
			"Default": "arn:aws:acm:us-east-1:037295147636:certificate/4989cc83-c793-4031-901d-16596f06af05"
		},
		"ApplicationID": {
			"Description": "Application ID - Official Application_ID, this is generated by Sysco's CMDB",
			"Type": "String",
			"Default": "APP-001151",
			"MinLength": "1",
			"MaxLength": "255",
			"AllowedPattern": "[\\x20-\\x7E]*",
			"ConstraintDescription": "Must contain only ASCII characters."
		},
		"ApplicationName": {
			"Description": "Application_Name - Common, user-friendly name",
			"Type": "String",
			"Default": "Cloud Pricing",
			"MinLength": "1",
			"MaxLength": "255",
			"AllowedPattern": "[\\x20-\\x7E]*",
			"ConstraintDescription": "Must contain only ASCII characters."
		},
		"Approver": {
			"Description": "Person approving instance funding.  This should be Email address formatted",
			"Type": "String",
			"Default": "villanueva.loi@corp.sysco.com",
			"MinLength": "1",
			"MaxLength": "255"
		},
		"Owner": {
			"Description": "Email address usually Product/ Platform Owner, though team distribution list for technical product/platform team contact",
			"Type": "String",
			"Default": "krishan.senevirathne@sysco.com",
			"MinLength": "1",
			"MaxLength": "255"
		},
		"SupportEmail": {
			"Description": "Email distribution list for technical product/platform team contact",
			"Type": "String",
			"Default": "000-BT-PricingPlatform@Corp.sysco.com",
			"MinLength": "1",
			"MaxLength": "255"
		},
		"ProjectID": {
			"Description": "Project_ID - BT Project ID for this workload",
			"Type": "String",
			"Default": "BT.001176",
			"MinLength": "1",
			"MaxLength": "255",
			"AllowedPattern": "[\\x20-\\x7E]*",
			"ConstraintDescription": "Must contain only ASCII characters."
		},
		"2WTAGGER": {
			"Description": "Used by 2nd Watch Managed Services in shared accounts to determine if a resource is supported",
			"Type": "String",
			"Default": "team-managed",
			"MinLength": "1",
			"MaxLength": "255",
			"AllowedValues": [
				"team-managed",
				"adlm-managed",
				"2w-managed"
			],
			"ConstraintDescription": "Must contain only ASCII characters."
		},
		"CMPbackup": {
			"Description": "CMP_backup - This tag is used by 2W document appropriate backup policy for managed workloads",
			"Type": "String",
			"Default": "sysco_monthly_12",
			"MinLength": "1",
			"MaxLength": "255",
			"AllowedValues": [
				"sysco_daily_7",
				"sysco_daily_14",
				"sysco_daily_30",
				"sysco_weekly_4",
				"sysco_monthly_12"
			]
		},
		"Platform": {
			"Description": "Platform",
			"Type": "String",
			"Default": "CP Pricing Service"
		},
		"Component": {
			"Description": "Component Name",
			"Type": "String",
			"Default": "Pricing service"
		},
		"Environment": {
			"Description": "Name of logical build environment designated for service.",
			"Type": "String",
			"Default": "Execution",
			"AllowedValues": [
				"Development",
				"Quality",
				"Staging",
				"Tuning",
				"Execution",
				"Production"
			],
			"ConstraintDescription": "Must be a valid environment."
		},
		"EnvironmentShort": {
			"Description": "Environment for application",
			"Type": "String",
			"Default": "DEV",
			"AllowedValues": [
				"DEV",
				"QA",
				"STG",
				"EXE",
				"TST",
				"PROD"
			],
			"ConstraintDescription": "Must be a valid environment."
		},
		"EnvironmentChar": {
			"Description": "Environment for application in single char",
			"Type": "String",
			"Default": "d",
			"AllowedValues": [
				"d",
				"q",
				"s",
				"e",
				"t",
				""
			],
			"ConstraintDescription": "Must be a valid environment."
		},
		"PricingServiceTargetGroup": {
			"Description": "Target group of the pricing-service",
			"Type": "String",
			"Default": "arn:aws:elasticloadbalancing:us-east-1:037295147636:targetgroup/target-group-pricing-service-DEV/8ec356a42e453663"
		}
	},
	"Resources": {
		"WebServiceGroup" : {
			"Type" : "AWS::AutoScaling::AutoScalingGroup",
			"Properties" : {
				"AvailabilityZones" : [ "us-east-1a", "us-east-1b", "us-east-1c" ],
				"LaunchConfigurationName" : { "Ref" : "WebServiceLaunchConfig" },
				"TargetGroupARNs": [ {"Ref" : "TargetGroup"} ],
				"MinSize" : "1",
				"DesiredCapacity" : "1",
				"MaxSize" : "50",
				"HealthCheckType": "ELB",
				"HealthCheckGracePeriod": "300",
				"VPCZoneIdentifier" : [ { "Ref" : "PvtSNa" }, { "Ref" : "PvtSNb" }, { "Ref" : "PvtSNc" } ],
				"Tags" : [
					{ "Key" : "Name", "Value" : { "Fn::Join" : ["", ["CP Refactored Web Service AutoScaling-", { "Ref" : "EnvironmentShort" }]]}, "PropagateAtLaunch" : "true" },
					{ "Key" : "Technical:ApplicationName", "Value" : { "Ref" : "ApplicationName" }, "PropagateAtLaunch" : "true" },
					{ "Key" : "Technical:ApplicationID", "Value" : { "Ref" : "ApplicationID" }, "PropagateAtLaunch" : "true" },
					{ "Key" : "Technical:PlatformOwner", "Value" : { "Ref" : "Owner" }, "PropagateAtLaunch" : "true" },
					{ "Key" : "Technical:Environment", "Value" : { "Ref" : "Environment" }, "PropagateAtLaunch" : "true" },
					{ "Key" : "Technical:ApplicationRole", "Value": "Auto Scaling Group", "PropagateAtLaunch" : "true" },
					{ "Key" : "Technical:ApplicationSubName", "Value": "Pricing Refactored Web Service", "PropagateAtLaunch" : "true" },
					{ "Key" : "Approver", "Value" : { "Ref" : "Approver" }, "PropagateAtLaunch" : "true" },
					{ "Key" : "PO_Number", "Value" : { "Ref" : "PONumber" }, "PropagateAtLaunch" : "true" },
					{ "Key" : "Project_ID", "Value" : { "Ref" : "ProjectID" }, "PropagateAtLaunch" : "true" },
					{ "Key" : "SupportEmail", "Value" : { "Ref" : "SupportEmail" }, "PropagateAtLaunch" : "true" },
					{ "Key" : "2WTAGGER", "Value" : { "Ref" : "2WTAGGER" }, "PropagateAtLaunch" : "true" },
					{ "Key" : "Platform", "Value" : { "Ref" : "Platform" }, "PropagateAtLaunch" : "true" },
					{ "Key" : "Component", "Value": { "Ref" : "Component" }, "PropagateAtLaunch" : "true" },
					{ "Key" : "Automation:SnapshotMgmt", "Value": "Disabled", "PropagateAtLaunch" : "true" }
				]
			},
			"UpdatePolicy" : {
				"AutoScalingScheduledAction" : {
					"IgnoreUnmodifiedGroupSizeProperties" : "true"
				},
				"AutoScalingRollingUpdate" : {
					"MinInstancesInService" : "1",
					"MaxBatchSize" : "1",
					"PauseTime" : "PT1M",
					"WaitOnResourceSignals" : "false"
				}
			}
		},
		"WebServiceLaunchConfig" : {
			"Type" : "AWS::AutoScaling::LaunchConfiguration",
			"Properties" : {
				"ImageId" : {"Ref" : "CommonAMI"},
				"InstanceType" : "t3.xlarge",
				"KeyName" : { "Ref" : "PemKey" },
				"SecurityGroups" : [{ "Ref" : "DNSSG" }, { "Ref" : "SGWebServices" }],
				"IamInstanceProfile" : { "Ref" : "InstanceProfile" },
				"BlockDeviceMappings" : [
					{"DeviceName": "/dev/xvda", "Ebs": { "VolumeSize": "65", "VolumeType": "gp2" }}
				],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash -v\n",
					"date > /home/ec2-user/starttime\n",

					"##############################################\n",
					"# Change Name of server to match new hostname\n",
					"##############################################\n",
					"sh -c \"hostname cprefwebsvc04-$(curl http://169.254.169.254/latest/meta-data/local-ipv4/ -s)",{ "Ref" : "EnvironmentChar" },".na.sysco.net\"\n",
					"tee /etc/sysconfig/network <<-EOF\n",
					"NETWORKING=yes\n",
					"HOSTNAME=cprefwebsvc04-$(curl http://169.254.169.254/latest/meta-data/local-ipv4/ -s)",{ "Ref" : "EnvironmentChar" },".na.sysco.net\n",
					"NOZEROCONF=yes\n",
					"EOF\n",

					"##############################################\n",
					"# Add Users to server\n",
					"##############################################\n",
					"useradd -m -g aix -c \"Krishan Senevirathne\" ksen0887\n",
					"useradd -m -g aix -c \"Loi Villanueva\" lvil8747\n",
					"useradd -m -g aix -c \"Sagar Shetty\" sshe7956\n",
					"useradd -m -g aix -c \"Lohitha Chiranjeewa\" lchi0638\n",
					"useradd -m -g aix -c \"Indunil Asanka\" iasa0862\n",
					"useradd -m -g aix -c \"Wickramarathna, Chamin\" cwic0864\n",
					"useradd -m -g aix -c \"Amoda Dissanayake\" adis0892\n",
					"useradd -m -g aix -c \"Gayan Herath\" gher1098\n",
					"useradd -m -g aix -c \"Gothami Karunarathne\" gkar5861\n",
					"useradd -m -g aix -c \"Piyumi Rameshka\" pram3932\n",

					"##############################################\n",
					"# Increase open file limits\n",
					"##############################################\n",
					"sh -c \"echo \\\"*   soft   nofile   50000\\\" >> /etc/security/limits.conf\"\n",
					"sh -c \"echo \\\"*   hard   nofile   102400\\\" >> /etc/security/limits.conf\"\n",

					"##############################################\n",
					"# Set System Environment \n",
					"##############################################\n",
					"sh -c \"echo 'export SERVER_ENVIRONMENT_VARIABLE=", { "Ref" : "EnvironmentShort" }, "'\" > /etc/profile.d/jvmsettings.sh\n",
					"sh -c \"echo 'SERVER_ENVIRONMENT_VARIABLE=", { "Ref" : "EnvironmentShort" }, "'\" > /etc/environment\n",

					"##############################################\n",
					"# Install Dependencies.\n",
					"# JavaJDK, code delpoy agent, cloud watch agent\n",
					"##############################################\n",
					"yum -y update\n",
					"yum install -y ruby\n",
					"cd /tmp\n",
					"aws s3 cp s3://sysco-us-east-1-prcp-nonprod-codedeploy/Tools/ . --recursive\n",
					"yum install -y jdk-8u131-linux-x64.rpm\n",

					"##############################################\n",
					"# DD APM - Configuration\n",
					"##############################################\n",
					"sh -c \"echo 'export JAVA_OPTS=\\\"-Ddd.logs.injection=true -Ddd.profiling.enabled=false -Ddd.service.mapping=mysql:cp-mysql-db -Ddd.service=cp-web-service -Ddd.env=dev\\\"'\" > /etc/profile.d/javaopts.sh\n",
					"chmod +x /etc/profile.d/javaopts.sh\n",

					"mkdir /etc/dd-java-agent/\n",
					"cd /etc/dd-java-agent/\n",
					"cp /tmp/dd-java-agent.jar /etc/dd-java-agent/\n",
					"chmod +x /etc/dd-java-agent/dd-java-agent.jar\n",
					"cd /tmp\n",

					"count=1\n",
					"currentStatus=$(service codedeploy-agent status)\n",
					"while [[ ! $currentStatus == *\"running as PID\"* ]]\n",
					"do\n",
					"if [ $count -le 3 ]\n",
					"then\n",
					"rm -f codeDeployInstaller\n",
					"wget -cO - https://aws-codedeploy-us-east-1.s3.us-east-1.amazonaws.com/latest/install > codeDeployInstaller\n",
					"chmod +x ./codeDeployInstaller\n",
					"./codeDeployInstaller auto\n",
					"currentStatus=$(service codedeploy-agent status)\n",
					"((count++))\n",
					"else\n",
					"shutdown now\n",
					"fi\n",
					"done\n",
					"wget https://s3.amazonaws.com/amazoncloudwatch-agent/amazon_linux/amd64/latest/amazon-cloudwatch-agent.rpm\n",
					"rpm -U ./amazon-cloudwatch-agent.rpm\n",

					"##############################################\n",
					"# DD log - Configuration\n",
					"##############################################\n",
					"DATADOG_TOKEN=$(aws --region=us-east-1 ssm get-parameter --name \"/DATADOG/AGENT/TOKEN\"  --output text --query \"Parameter.Value\")\n",

					"cat > /etc/datadog-agent/datadog.yaml <<EOF\n",
					"api_key: $DATADOG_TOKEN\n",
					"site: datadoghq.com\n",
					"tags:\n",
					"   - application:cpwsng-",{ "Ref" : "EnvironmentShort" },"\n",
					"   - lifecycle:prcp-",{ "Ref" : "EnvironmentShort" },"\n",
					"   - function:prcp-",{ "Ref" : "EnvironmentShort" },"-ingest\n",
					"   - environment:non-prod-",{ "Ref" : "EnvironmentShort" },"\n",
					"env: development\n",
					"logs_enabled: true\n",
					"apm_config:\n",
					"  enabled: true\n",
					"EOF\n",

					"mkdir /etc/datadog-agent/conf.d/custom.d/\n",
					"cat > /etc/datadog-agent/conf.d/custom.d/conf.yml <<EOF\n",
					"logs:\n",
					"    - type: file\n",
					"      path: /cpwsng-refac/service/logs/cpwsng-refac-metrics.log\n",
					"      source: cp_metrics\n",
					"      service: cp-web-service\n",
					"EOF\n",
					"chown -R dd-agent:dd-agent /etc/datadog-agent/conf.d/custom.d/\n",
					"chmod -R -c 755 /etc/datadog-agent/conf.d/custom.d/\n",
					"cat > /etc/datadog-agent/conf.d/disk.d/conf.yaml.default <<EOF\n",
					"instances:\n",
					"    - use_mount: false\n",
					"      mount_point_blacklist:\n",
					"      - /opt/sentinelone/mount\n",
					"EOF\n",

					"chown -R dd-agent:dd-agent /var/log/datadog/\n",
					"systemctl restart datadog-agent\n",


					"##############################################\n",
					"# CloudWatch Configuration\n",
					"##############################################\n",

					"cd /opt/aws/amazon-cloudwatch-agent/bin\n",
					"./amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c ssm:/CP/REFACTORED_WEB_SERVICE/", { "Ref" : "EnvironmentShort" } ,"/CLOUDWATCH -s\n",

					"cd /tmp\n",

					"date > /home/ec2-user/stoptime"
				]]}}
			}
		},
		"CPUAlarmHigh" : {
			"Type" : "AWS::CloudWatch::Alarm",
			"DependsOn": "WebServiceGroup",
			"Properties" : {
				"AlarmName" : { "Fn::Join" : ["", ["CP-Refactored-WebService-CPU-ScaleUp-", { "Ref" : "EnvironmentShort" }]]},
				"Dimensions" : [{ "Name" : "AutoScalingGroupName", "Value" : { "Ref" : "WebServiceGroup" }}],
				"AlarmDescription" : "Scale-up if Avg CPU > 50% for 1 minutes or 1x1 minute periods",
				"Namespace" : "AWS/EC2",
				"MetricName" : "CPUUtilization",
				"Statistic" : "Average",
				"ComparisonOperator" : "GreaterThanThreshold",
				"Threshold" : "50",
				"Period" : "60",
				"EvaluationPeriods" : "1",
				"AlarmActions" : [ { "Ref" : "ScaleUpPolicy" } ]
			}
		},
		"CPUAlarmLow" : {
			"Type" : "AWS::CloudWatch::Alarm",
			"DependsOn": "WebServiceGroup",
			"Properties" : {
				"AlarmName" : { "Fn::Join" : ["", ["CP-Refactored-WebService-CPU-ScaleDown-", { "Ref" : "EnvironmentShort" }]]},
				"Dimensions" : [{ "Name" : "AutoScalingGroupName", "Value" : { "Ref" : "WebServiceGroup" }}],
				"AlarmDescription" : "Scale-down if Avg CPU < 35% for 5 minutes or 5x3 minute periods",
				"Namespace" : "AWS/EC2",
				"MetricName" : "CPUUtilization",
				"Statistic" : "Average",
				"ComparisonOperator" : "LessThanThreshold",
				"Threshold" : "35",
				"Period" : "300",
				"EvaluationPeriods" : "3",
				"AlarmActions" : [ { "Ref" : "ScaleDownPolicy" } ]
			}
		},
		"ScaleUpPolicy" : {
			"Type" : "AWS::AutoScaling::ScalingPolicy",
			"DependsOn": "WebServiceGroup",
			"Properties" : {
				"AdjustmentType" : "ChangeInCapacity",
				"AutoScalingGroupName" : { "Ref" : "WebServiceGroup" },
				"PolicyType" : "SimpleScaling",
				"Cooldown" : "60",
				"ScalingAdjustment" : "2"
			}
		},
		"ScaleDownPolicy" : {
			"Type" : "AWS::AutoScaling::ScalingPolicy",
			"DependsOn": "WebServiceGroup",
			"Properties" : {
				"AdjustmentType" : "ChangeInCapacity",
				"AutoScalingGroupName" : { "Ref" : "WebServiceGroup" },
				"PolicyType" : "SimpleScaling",
				"Cooldown" : "60",
				"ScalingAdjustment" : "-1"
			}
		},
		"WebServiceALB": {
			"Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
			"Properties": {
				"Name": { "Fn::Join" : ["", ["alb-cp-refactored-ws-", { "Ref" : "EnvironmentShort" }]]},
				"Subnets": [{ "Ref" : "PvtSNa" },{ "Ref" : "PvtSNb" },{ "Ref" : "PvtSNc" }],
				"Scheme": "internal",
				"SecurityGroups": [ { "Ref": "SGELBs" } ],
				"Tags": [
					{ "Key" : "Name", "Value" : { "Fn::Join" : ["", ["Cloud-Pricing-Refactored-WS-ALB-", { "Ref" : "EnvironmentShort" }]]}},
					{ "Key" : "Technical:ApplicationName", "Value" : { "Ref" : "ApplicationName" } },
					{ "Key" : "Technical:ApplicationID", "Value" : { "Ref" : "ApplicationID" } },
					{ "Key" : "Technical:PlatformOwner", "Value" : { "Ref" : "Owner" } },
					{ "Key" : "Technical:Environment", "Value" : { "Ref" : "Environment" } },
					{ "Key" : "Technical:ApplicationRole", "Value" : "Load Balancer" },
					{ "Key" : "Technical:ApplicationSubName", "Value": "Cloud Pricing Refactored WS ALB" },
					{ "Key" : "Approver", "Value" : { "Ref" : "Approver" } },
					{ "Key" : "PO_Number", "Value" : { "Ref" : "PONumber" } },
					{ "Key" : "SupportEmail", "Value" : { "Ref" : "SupportEmail" } },
					{ "Key" : "Project_ID", "Value" : { "Ref" : "ProjectID" } },
					{ "Key" : "2WTAGGER", "Value" : { "Ref" : "2WTAGGER" } },
					{ "Key" : "Platform", "Value" : { "Ref" : "Platform" } },
					{ "Key" : "Component", "Value": { "Ref" : "Component" } }
				]
			}
		},
		"LoadBalancerListenerHTTP": {
			"Type": "AWS::ElasticLoadBalancingV2::Listener",
			"Properties": {
				"LoadBalancerArn":  { "Ref": "WebServiceALB" },
				"Port": "80",
				"Protocol": "HTTP",
				"DefaultActions": [
					{
						"Type": "forward",
						"TargetGroupArn": { "Ref": "TargetGroup" }
					}
				]
			}
		},
		"LoadBalancerListenerHTTPPathCheckRule": {
			"Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
			"Properties": {
				"Actions": [
					{
						"Type": "forward",
						"TargetGroupArn": { "Ref": "PricingServiceTargetGroup" }
					}
				],
				"Conditions": [
					{
						"Field": "path-pattern",
						"PathPatternConfig": {
							"Values": [
								"/v1/pricing/product-prices",
								"/v1/pricing/order-prices",
								"/v1/pricing/pci-prices"
							]
						}
					}
				],
				"ListenerArn": { "Ref": "LoadBalancerListenerHTTP" },
				"Priority": 2
			}
		},
		"LoadBalancerListenerHTTPQueryCheckRule": {
			"Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
			"Properties": {
				"Actions": [
					{
						"Type": "forward",
						"TargetGroupArn": { "Ref": "PricingServiceTargetGroup" }
					}
				],
				"Conditions": [
					{
						"Field": "query-string",
						"QueryStringConfig": {
							"Values": [{
								"Key": "customer-type",
								"Value": "TRS"
							}]
						}
					}
				],
				"ListenerArn": { "Ref": "LoadBalancerListenerHTTP" },
				"Priority": 3
			}
		},
		"LoadBalancerListenerHTTPHealthCheckRule": {
			"Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
			"Properties": {
				"Actions": [
					{
						"Type": "redirect",
						"RedirectConfig": {
							"Host" : "#{host}",
							"Path" : "/support/healthcheck",
							"Port" : "#{port}",
							"Protocol" : "#{protocol}",
							"StatusCode" : "HTTP_301"
						}
					}
				],
				"Conditions": [
					{
						"Field": "path-pattern",
						"PathPatternConfig": {
							"Values": [
								"/pricerequest/healthcheck"
							]
						}
					}
				],
				"ListenerArn": { "Ref": "LoadBalancerListenerHTTP" },
				"Priority": 4
			}
		},
		"LoadBalancerListenerHTTPS": {
			"Type": "AWS::ElasticLoadBalancingV2::Listener",
			"Properties": {
				"LoadBalancerArn":  { "Ref": "WebServiceALB" },
				"Certificates": [
					{
						"CertificateArn": { "Ref" : "SSLCertificate" }
					}
				],
				"Port": "443",
				"Protocol": "HTTPS",
				"DefaultActions": [
					{
						"Type": "forward",
						"TargetGroupArn": { "Ref": "TargetGroup" }
					}
				]
			}
		},
		"LoadBalancerListenerHTTPSPathCheckRule": {
			"Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
			"Properties": {
				"Actions": [
					{
						"Type": "forward",
						"TargetGroupArn": { "Ref": "PricingServiceTargetGroup" }
					}
				],
				"Conditions": [
					{
						"Field": "path-pattern",
						"PathPatternConfig": {
							"Values": [
								"/v1/pricing/product-prices",
								"/v1/pricing/order-prices",
								"/v1/pricing/pci-prices"
							]
						}
					}
				],
				"ListenerArn": { "Ref": "LoadBalancerListenerHTTPS" },
				"Priority": 2
			}
		},
		"LoadBalancerListenerHTTPSQueryCheckRule": {
			"Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
			"Properties": {
				"Actions": [
					{
						"Type": "forward",
						"TargetGroupArn": { "Ref": "PricingServiceTargetGroup" }
					}
				],
				"Conditions": [
					{
						"Field": "query-string",
						"QueryStringConfig": {
							"Values": [{
								"Key": "customer-type",
								"Value": "TRS"
							}]
						}
					}
				],
				"ListenerArn": { "Ref": "LoadBalancerListenerHTTPS" },
				"Priority": 3
			}
		},
		"LoadBalancerListenerHTTPSHealthCheckRule": {
			"Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
			"Properties": {
				"Actions": [
					{
						"Type": "redirect",
						"RedirectConfig": {
							"Host" : "#{host}",
							"Path" : "/support/healthcheck",
							"Port" : "#{port}",
							"Protocol" : "#{protocol}",
							"StatusCode" : "HTTP_301"
						}
					}
				],
				"Conditions": [
					{
						"Field": "path-pattern",
						"PathPatternConfig": {
							"Values": [
								"/pricerequest/healthcheck"
							]
						}
					}
				],
				"ListenerArn": { "Ref": "LoadBalancerListenerHTTPS" },
				"Priority": 4
			}
		},
		"TargetGroup": {
			"Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
			"Properties": {
				"Name": { "Fn::Join" : ["", ["target-group-refactored-ws-", { "Ref" : "EnvironmentShort" }]]},
				"VpcId": { "Ref" : "VPCID" },
				"Port": "8080",
				"Protocol": "HTTP",
				"HealthCheckIntervalSeconds": "30",
				"HealthCheckPath": "/cpwssm04/support/healthcheck",
				"HealthCheckPort": "8080",
				"HealthCheckProtocol": "HTTP",
				"HealthCheckTimeoutSeconds": "15",
				"HealthyThresholdCount": "3",
				"TargetType": "instance",
				"TargetGroupAttributes": [
					{ "Key": "load_balancing.algorithm.type", "Value": "least_outstanding_requests"}
				],
				"Tags": [
					{ "Key" : "Name", "Value" : { "Fn::Join" : ["", ["Cloud-Pricing-Refactored-WS-Target-Group", { "Ref" : "EnvironmentShort" }]]}},
					{ "Key" : "Technical:ApplicationName", "Value" : { "Ref" : "ApplicationName" } },
					{ "Key" : "Technical:ApplicationID", "Value" : { "Ref" : "ApplicationID" } },
					{ "Key" : "Technical:PlatformOwner", "Value" : { "Ref" : "Owner" } },
					{ "Key" : "Technical:Environment", "Value" : { "Ref" : "Environment" } },
					{ "Key" : "Technical:ApplicationRole", "Value" : "Target Group" },
					{ "Key" : "Technical:ApplicationSubName", "Value": "Cloud Pricing Refactored WS Target" },
					{ "Key" : "Approver", "Value" : { "Ref" : "Approver" } },
					{ "Key" : "PO_Number", "Value" : { "Ref" : "PONumber" } },
					{ "Key" : "SupportEmail", "Value" : { "Ref" : "SupportEmail" } },
					{ "Key" : "Project_ID", "Value" : { "Ref" : "ProjectID" } },
					{ "Key" : "2WTAGGER", "Value" : { "Ref" : "2WTAGGER" } },
					{ "Key" : "Platform", "Value" : { "Ref" : "Platform" } },
					{ "Key" : "Component", "Value":{ "Ref" : "Component" } }
				]
			}
		},
		"CPRefacWebSvcCodeDeployGroup": {
			"Type" : "AWS::CodeDeploy::DeploymentGroup",
			"Properties" : {
				"ApplicationName" : "CP_Refactored_WebService",
				"AutoScalingGroups" : [ { "Ref" : "WebServiceGroup" } ],
				"DeploymentConfigName" : "CodeDeployDefault.OneAtATime",
				"DeploymentGroupName" : { "Fn::Join" : ["", ["CP_Refactored_WebService", { "Ref" : "EnvironmentShort" }]]},
				"ServiceRoleArn": "arn:aws:iam::037295147636:role/CloudPricing-CodeDeploy-Role"
			}
		}
	}
}