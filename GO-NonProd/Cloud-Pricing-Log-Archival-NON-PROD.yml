---
AWSTemplateFormatVersion: 2010-09-09
Description: This is used to implement resources for the log archive mechanism
Parameters:
  PONumber:
    Description: PO Number for billing
    Type: String
    Default: '7000002358'
    MinLength: '1'
    MaxLength: '255'
    AllowedPattern: "[\\x20-\\x7E]*"
    ConstraintDescription: Must contain only ASCII characters.
  FunctionName:
    Type: String
    Description: Name of the Lambda function for log archive controller
    Default: log-archive-
  ApplicationName:
    Description: Name of application
    Type: String
    Default: Cloud Pricing
    MinLength: '1'
    MaxLength: '255'
    AllowedPattern: "[\\x20-\\x7E]*"
    ConstraintDescription: Must contain only ASCII characters.
  ApplicationId:
    Description: Application ID
    Type: String
    Default: APP-001151
    MinLength: '1'
    MaxLength: '255'
    AllowedPattern: "[\\x20-\\x7E]*"
    ConstraintDescription: Must contain only ASCII characters.
  Approver:
    Description: Person approving instance funding.  This should be Email address
      formatted
    Type: String
    Default: villanueva.loi@corp.sysco.com
    MinLength: '1'
    MaxLength: '255'
  Owner:
    Description: Email address usually Product/ Platform Owner, though team distribution
      list for technical product/platform team contact
    Type: String
    Default: krishan.senevirathne@sysco.com
    MinLength: '1'
    MaxLength: '255'
  SupportEmail:
    Description: Email distribution list for technical product/platform team contact
    Type: String
    Default: 000-BT-PricingPlatform@Corp.sysco.com
    MinLength: '1'
    MaxLength: '255'
  ProjectId:
    Description: Project ID
    Type: String
    Default: BT.001176
    MinLength: '1'
    MaxLength: '255'
    AllowedPattern: "[\\x20-\\x7E]*"
    ConstraintDescription: Must contain only ASCII characters.
  2WTAGGER:
    Description: Used by 2nd Watch Managed Services in shared accounts to determine
      if a resource is supported
    Type: String
    Default: team-managed
    MinLength: '1'
    MaxLength: '255'
    AllowedValues:
      - team-managed
      - adlm-managed
      - 2w-managed
    ConstraintDescription: Must contain only ASCII characters.
  Platform:
    Description: Platform
    Type: String
    Default: cloud-pricing
  Environment:
    Description: Environment for application
    Type: String
    Default: Non-Production
    AllowedValues:
      - Non-Production
      - Production
    ConstraintDescription: Must be a valid environment.
  EnvironmentShort:
    Description: Environment for application
    Type: String
    Default: NON-PROD
    AllowedValues:
      - NON-PROD
      - PROD
    ConstraintDescription: Must be a valid environment.
  AWSRegionIdentifier:
    Type: String
    Description: Name of AWS region
    Default: us-east-1
  LogArchiveScheduleRuleName:
    Type: String
    Description: rule name for the  log archive mechanism
    Default: log-archive-schedule-rule-
  LogArchiveLogBucketName:
    Type: String
    Description: s3 bucket for the  log archive mechanism
    Default: cp-log-archive-bucket-non-prod
    AllowedValues:
      - cp-log-archive-bucket-non-prod
      - cp-log-archive-bucket-prod
  LastWeeklyExportingGroupNumber:
    Description: The last log group which is exported weekly
    Type: String
    Default: 15
  CodeDeployBucket:
      Type: String
      Description: S3 bucket to pull the code
      Default: sysco-us-east-1-prcp-nonprod-codedeploy
      AllowedValues:
        - sysco-us-east-1-prcp-nonprod-codedeploy
        - sysco-us-east-1-prcp-prod-codedeploy
  CodeDeployDirectory:
    Type: String
    Description: Directory in S3 bucket
    Default: Log-Archival
  CodeDeployFileName:
    Type: String
    Description: Zip file name
    Default: cp-log-archival.zip
  GroupNumber:
    Description: The ssm parameter of the group Number
    Type: String
    Default: /CP/LOG-ARCHIVAL/GROUP-NUMBER
  LogGroups:
    Description: The ssm parameter of log groups 
    Type: String
    Default: /CP/CLOUDWATCH/LOG-GROUPS
Resources:
  LogArchiveLogBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName:
        Ref: LogArchiveLogBucketName
      LifecycleConfiguration:
        Rules:
          - Id: LongTermArchival
            Prefix: long-term
            Status: Enabled
            Transitions:
              - TransitionInDays: '365'
                StorageClass: GLACIER
          - Id: ShortTermArchival
            Prefix: short-term
            Status: Enabled
            Transitions:
              - TransitionInDays: '90'
                StorageClass: GLACIER
  LogArchiveLogBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket:
        Ref: LogArchiveLogBucketName
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: logs.us-east-1.amazonaws.com
            Action: s3:GetBucketAcl
            Resource:
              Fn::Join:
                - ''
                - - 'arn:aws:s3:::'
                  - Ref: LogArchiveLogBucketName
          - Effect: Allow
            Principal:
              Service: logs.us-east-1.amazonaws.com
            Action: s3:PutObject
            Resource:
              Fn::Join:
                - ''
                - - 'arn:aws:s3:::'
                  - Ref: LogArchiveLogBucketName
                  - /*
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
  LogArchiveScheduleRule:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: Schedule rule to archive cloudwatch logs
      Name:
        Fn::Join:
          - ''
          - - Ref: LogArchiveScheduleRuleName
            - Ref: EnvironmentShort
      State: ENABLED
      ScheduleExpression: 'cron(0 2-11 ? * SAT,SUN *)'
      Targets:
        - Arn:
            Fn::GetAtt:
              - LogArchiveLambdaFunction
              - Arn
          Id: LogArchiveLambdaFunctionV1
  LogArchives3Policy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: Log-Archive-s3-Policy
      Path: /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: writetbucket
            Effect: Allow
            Action:
              - s3:List*
              - s3:Put*
              - s3:Get*
              - s3:Describe*
            Resource:
              Fn::Join:
                - ''
                - - 'arn:aws:s3:::'
                  - Ref: LogArchiveLogBucketName
                  - /*
  LogArchiveEventsPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: Log-Archive-Events-Policy
      Path: /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: cloudwatcheventrule
            Effect: Allow
            Action:
              - events:DescribeRule
              - events:ListRules
              - events:ListRuleNamesByTarget
              - events:EnableRule
              - events:DisableRule
              - events:TagResource
              - IAM:PassRole
            Resource:
              Fn::Join:
                - ''
                - - 'arn:aws:events:::rule/'
                  - Ref: LogArchiveScheduleRuleName
                  - Ref: EnvironmentShort
                  - /*
  LogArchiveSSMPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: Log-Archive-SSM-Policy
      Path: /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ssmparameter
            Effect: Allow
            Action:
              - ssm:describeParameters
              - ssm:getParameters
              - ssm:getParameter
              - ssm:getParametersByPath
              - ssm:describeParameters
              - ssm:getParameterHistory
              - ssm:PutParameter
            Resource:
              - Fn::Join:
                - ''
                - - 'arn:aws:ssm:us-east-1:037295147636:parameter'
                  - Fn::Join: 
                    - ''
                    - - !Ref LogGroups
              - Fn::Join:
                - ''
                - - 'arn:aws:ssm:us-east-1:037295147636:parameter'
                  - Fn::Join:
                    - ''
                    - - !Ref GroupNumber
  LogArchiveCloudWatchPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: Log-Archive-CloudWatch-Policy
      Path: /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: cloudwatchlogs
            Effect: Allow
            Action:
              - logs:cancelExportTask
              - logs:createExportTask
              - logs:describeExportTasks
              - logs:describeDestinations
              - logs:describeLogGroups
              - logs:describeLogStreams
              - logs:filterLogEvents
              - logs:getLogEvents
              - logs:createLogDelivery
              - logs:putDestination
              - logs:putDestinationPolicy
              - logs:putLogEvents
              - logs:updateLogDelivery
              - iam:GetPolicy
              - iam:GetPolicyVersion
              - iam:GetRole
            Resource: "arn:aws:logs:us-east-1:037295147636:log-group:*"
  LogArchiveLambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      PermissionsBoundary:
        Fn::Sub: "arn:aws:iam::${AWS::AccountId}:policy/PermissionBoundary-DevOps"
      Path: /
      ManagedPolicyArns:
        - Ref: LogArchiveSSMPolicy
        - Ref: LogArchiveCloudWatchPolicy
        - Ref: LogArchives3Policy
        - Ref: LogArchiveEventsPolicy
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
  PermissionForEventsToInvokeLambda:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName:
        Ref: LogArchiveLambdaFunction
      Action: 'lambda:InvokeFunction'
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - LogArchiveScheduleRule
          - Arn
  LogArchiveLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName:
        Fn::Join:
          - ''
          - - Ref: FunctionName
            - Ref: EnvironmentShort
      Runtime: python3.6
      Role:
        Fn::GetAtt:
          - LogArchiveLambdaRole
          - Arn
      Timeout: 900
      Handler: index.lambda_handler
      Description: Invoke a function during stack creation.
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - Ref: FunctionName
                - Ref: EnvironmentShort
        - Key: Technical:ApplicationName
          Value:
            Ref: ApplicationName
        - Key: Technical:ApplicationID
          Value:
            Ref: ApplicationId
        - Key: Technical:PlatformOwner
          Value:
            Ref: Owner
        - Key: Technical:Environment
          Value:
            Ref: Environment
        - Key: Technical:ApplicationSubName
          Value:
            Fn::Join:
              - ''
              - - Ref: FunctionName
                - Ref: EnvironmentShort
        - Key: Technical:ApplicationRole
          Value: Lambda Function
        - Key: Approver
          Value:
            Ref: Approver
        - Key: Component
          Value:
            Fn::Join:
              - ''
              - - Ref: FunctionName
                - Ref: EnvironmentShort
        - Key: Support_Email
          Value:
            Ref: SupportEmail
        - Key: PO_Number
          Value:
            Ref: PONumber
        - Key: Project_ID
          Value:
            Ref: ProjectId
        - Key: 2WTAGGER
          Value:
            Ref: 2WTAGGER
        - Key: Platform
          Value:
            Ref: Platform
      Environment:
        Variables:
          LastWeeklyExportingGroupNumber:
            Ref: LastWeeklyExportingGroupNumber
      Code:
        S3Bucket:
          Ref: CodeDeployBucket
        S3Key: !Sub '${CodeDeployDirectory}/${CodeDeployFileName}'
      